<?php
/*
  $Id: banktransfer.php,v 1.1.1.1 2005/12/03 21:36:11 max Exp $

  OSC German Banktransfer
  (http://www.oscommerce.com/community/contributions,826)
 
  Contribution based on:
 
  osCommerce, Open Source E-Commerce Solutions
  http://www.oscommerce.com

  Copyright (c) 2001 - 2003 osCommerce

  Released under the GNU General Public License
*/

  class banktransfer {
    var $code, $title, $description, $enabled;

// class constructor
    function banktransfer() {
      global $order, $HTTP_POST_VARS;

      $this->code = 'banktransfer';
      $this->title = MODULE_PAYMENT_BANKTRANSFER_TEXT_TITLE;
      $this->description = MODULE_PAYMENT_BANKTRANSFER_TEXT_DESCRIPTION;
      $this->sort_order = MODULE_PAYMENT_BANKTRANSFER_SORT_ORDER;
      $this->enabled = ((MODULE_PAYMENT_BANKTRANSFER_STATUS == 'True') ? true : false);

      if ((int)MODULE_PAYMENT_BANKTRANSFER_ORDER_STATUS_ID > 0) {
        $this->order_status = MODULE_PAYMENT_BANKTRANSFER_ORDER_STATUS_ID;
      }
      if (is_object($order)) $this->update_status();

      if ($HTTP_POST_VARS['banktransfer_fax'] == "on")
        $this->email_footer = MODULE_PAYMENT_BANKTRANSFER_TEXT_EMAIL_FOOTER;
    }

// class methods
    function update_status() {
      global $order;

      if ( ($this->enabled == true) && ((int)MODULE_PAYMENT_BANKTRANSFER_ZONE > 0) ) {
        $check_flag = false;
        $check_query = tep_db_query("select zone_id from " . TABLE_ZONES_TO_GEO_ZONES . " where geo_zone_id = '" . MODULE_PAYMENT_BANKTRANSFER_ZONE . "' and zone_country_id = '" . $order->billing['country']['id'] . "' order by zone_id");
        while ($check = tep_db_fetch_array($check_query)) {
          if ($check['zone_id'] < 1) {
            $check_flag = true;
            break;
          } elseif ($check['zone_id'] == $order->billing['zone_id']) {
            $check_flag = true;
            break;
          }
        }

        if ($check_flag == false) {
          $this->enabled = false;
        }
      }
    // disable the module if the order only contains virtual products
      if ($this->enabled == true) {
        if ($order->content_type == 'virtual') {
          $this->enabled = false;
        }
      }
    }

    function javascript_validation() {
      $js = 'if (payment_value == "' . $this->code . '") {' . "\n" .
            '  var banktransfer_blz = document.checkout_payment.banktransfer_blz.value;' . "\n" .
            '  var banktransfer_number = document.checkout_payment.banktransfer_number.value;' . "\n" .
            '  var banktransfer_owner = document.checkout_payment.banktransfer_owner.value;' . "\n" .
            '  var banktransfer_fax = document.checkout_payment.banktransfer_fax.checked;' . "\n" .
            '  if (banktransfer_fax == false) {' . "\n" .
            '    if (banktransfer_blz == "") {' . "\n" .
            '      error_message = error_message + "' . JS_BANK_BLZ . '";' . "\n" .
            '      error = 1;' . "\n" .
            '    }' . "\n" .
            '    if (banktransfer_number == "") {' . "\n" .
            '      error_message = error_message + "' . JS_BANK_NUMBER . '";' . "\n" .
            '      error = 1;' . "\n" .
            '    }' . "\n" .
            '    if (banktransfer_owner == "") {' . "\n" .
            '      error_message = error_message + "' . JS_BANK_OWNER . '";' . "\n" .
            '      error = 1;' . "\n" .
            '    }' . "\n" .
            '  }' . "\n" .
            '}' . "\n";
      return $js;
    }

    function selection() {
      global $order, $HTTP_POST_VARS;



      $selection = array('id' => $this->code,
                         'module' => $this->title,
      	                 'fields' => array(array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_NOTE,
      	                                         'field' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_INFO),
      	                                   array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_OWNER,
      	                                         'field' => tep_draw_input_field('banktransfer_owner', $order->billing['firstname'] . ' ' . $order->billing['lastname'])),
      	                                   array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_BLZ,
      	                                         'field' => tep_draw_input_field('banktransfer_blz', '', 'size="8" maxlength="8"')),
      	                                   array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_NUMBER,
      	                                         'field' => tep_draw_input_field('banktransfer_number', '', 'size="16" maxlength="32"')),
      	                                   array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_NAME,
      	                                         'field' => tep_draw_input_field('banktransfer_bankname')),
      	                                   array('title' => '',
      	                                         'field' => tep_draw_hidden_field('recheckok', $HTTP_POST_VARS['recheckok']))
      	                                   ));

      if (MODULE_PAYMENT_BANKTRANSFER_FAX_CONFIRMATION =='true'){
        $selection['fields'][] = array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_NOTE,
      	                               'field' => MODULE_PAYMENT_BANKTRANSFER_TEXT_NOTE2 . '<a href="' . MODULE_PAYMENT_BANKTRANSFER_URL_NOTE . '" target="_blank"><b>' . MODULE_PAYMENT_BANKTRANSFER_TEXT_NOTE3 . '</b></a>' . MODULE_PAYMENT_BANKTRANSFER_TEXT_NOTE4);
      	$selection['fields'][] = array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_FAX,
      	                               'field' => tep_draw_checkbox_field('banktransfer_fax', 'on'));

      }

      return $selection;
    }

    function pre_confirmation_check(){
      global $HTTP_POST_VARS;
      global $banktransfer_number, $banktransfer_blz;

      if ($HTTP_POST_VARS['banktransfer_fax'] == false) {
        include(DIR_WS_CLASSES . 'banktransfer_validation.php');

        $banktransfer_validation = new AccountCheck;
        $banktransfer_result = $banktransfer_validation->CheckAccount($banktransfer_number, $banktransfer_blz);

        if ($banktransfer_result > 0 ||  $HTTP_POST_VARS['banktransfer_owner'] == '') {
          if ($HTTP_POST_VARS['banktransfer_owner'] == '') {
            $error = 'Name des Kontoinhabers fehlt!';
            $recheckok = '';
          } else {
            switch ($banktransfer_result) {
              case 1: // number & blz not ok
                $error = MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_ERROR_1;
                $recheckok = 'true';
                break;
              case 5: // BLZ not found
                $error = MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_ERROR_5;
                $recheckok = 'true';
                break;
              case 8: // no blz entered
                $error = MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_ERROR_8;
                $recheckok = '';
                break;
              case 9: // no number entered
                $error = MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_ERROR_9;
                $recheckok = '';
                break;
              default:
                $error = MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_ERROR_4;
                $recheckok = 'true';
                break;
            }
          }

          if ($HTTP_POST_VARS['recheckok'] != 'true') {
            $payment_error_return = 'payment_error=' . $this->code . '&error=' . urlencode($error) . '&banktransfer_owner=' . urlencode($HTTP_POST_VARS['banktransfer_owner']) . '&banktransfer_number=' . urlencode($HTTP_POST_VARS['banktransfer_number']) . '&banktransfer_blz=' . urlencode($HTTP_POST_VARS['banktransfer_blz']) . '&banktransfer_bankname=' . urlencode($HTTP_POST_VARS['banktransfer_bankname']) . '&recheckok=' . $recheckok;

            tep_redirect(tep_href_link(FILENAME_CHECKOUT_PAYMENT, $payment_error_return, 'SSL', true, false));
          }
        }
        $this->banktransfer_owner = $HTTP_POST_VARS['banktransfer_owner'];
        $this->banktransfer_blz = $HTTP_POST_VARS['banktransfer_blz'];
        $this->banktransfer_number = $HTTP_POST_VARS['banktransfer_number'];
        $this->banktransfer_prz = $banktransfer_validation->PRZ;
        $this->banktransfer_status = $banktransfer_result;
        if ($banktransfer_validation->Bankname != '')
          $this->banktransfer_bankname = $banktransfer_validation->Bankname;
        else
          $this->banktransfer_bankname = $HTTP_POST_VARS['banktransfer_bankname'];
      }
    }

    function confirmation() {
      global $HTTP_POST_VARS, $banktransfer_val, $banktransfer_owner, $banktransfer_bankname, $banktransfer_blz, $banktransfer_number, $checkout_form_action, $checkout_form_submit;

      if (!$HTTP_POST_VARS['banktransfer_owner'] == '') {
        $confirmation = array('title' => $this->title,
                              'fields' => array(array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_OWNER,
                                                      'field' => $this->banktransfer_owner),
                                                array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_BLZ,
                                                      'field' => $this->banktransfer_blz),
                                                array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_NUMBER,
                                                      'field' => $this->banktransfer_number),
                                                array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_NAME,
                                                      'field' => $this->banktransfer_bankname)
                                                ));
      }
      if ($HTTP_POST_VARS['banktransfer_fax'] == "on") {
        $confirmation = array('fields' => array(array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_FAX)));
        $this->banktransfer_fax = "on";
      }
      return $confirmation;
    }

    function process_button() {
      global $HTTP_POST_VARS;

      $process_button_string = tep_draw_hidden_field('banktransfer_blz', $this->banktransfer_blz) .
                               tep_draw_hidden_field('banktransfer_bankname', $this->banktransfer_bankname).
                               tep_draw_hidden_field('banktransfer_number', $this->banktransfer_number) .
                               tep_draw_hidden_field('banktransfer_owner', $this->banktransfer_owner) .
                               tep_draw_hidden_field('banktransfer_status', $this->banktransfer_status) .
                               tep_draw_hidden_field('banktransfer_prz', $this->banktransfer_prz) .
                               tep_draw_hidden_field('banktransfer_fax', $this->banktransfer_fax);

      return $process_button_string;

    }

    function before_process() {
      return false;
    }

    function after_process() {
      global $insert_id, $HTTP_POST_VARS, $banktransfer_val, $banktransfer_owner, $banktransfer_bankname, $banktransfer_blz, $banktransfer_number, $banktransfer_status, $banktransfer_prz, $banktransfer_fax, $checkout_form_action, $checkout_form_submit;
      tep_db_query("INSERT INTO ".TABLE_BANKTRANSFER." (orders_id, banktransfer_blz, banktransfer_bankname, banktransfer_number, banktransfer_owner, banktransfer_status, banktransfer_prz) VALUES ('" . (int)$insert_id . "', '" . tep_db_input($HTTP_POST_VARS['banktransfer_blz']) . "', '" . tep_db_input($HTTP_POST_VARS['banktransfer_bankname']) . "', '" . tep_db_input($HTTP_POST_VARS['banktransfer_number']) . "', '" . tep_db_input($HTTP_POST_VARS['banktransfer_owner']) ."', '" . tep_db_input($HTTP_POST_VARS['banktransfer_status']) ."', '" . tep_db_input($HTTP_POST_VARS['banktransfer_prz']) ."')");
      if ($HTTP_POST_VARS['banktransfer_fax'])
        tep_db_query("update ".TABLE_BANKTRANSFER." set banktransfer_fax = '" . tep_db_input($HTTP_POST_VARS['banktransfer_fax']) ."' where orders_id = '" . (int)$insert_id . "'");
    }

    function get_error() {
      global $HTTP_GET_VARS;

      $error = array('title' => MODULE_PAYMENT_BANKTRANSFER_TEXT_BANK_ERROR,
                     'error' => stripslashes(urldecode($HTTP_GET_VARS['error'])));

      return $error;
    }

    function check() {
      if (!isset($this->_check)) {
        $check_query = tep_db_query("select configuration_value from " . TABLE_CONFIGURATION . " where configuration_key = 'MODULE_PAYMENT_BANKTRANSFER_STATUS'");
        $this->_check = tep_db_num_rows($check_query);
      }
      return $this->_check;
    }

    function install() {
      tep_db_query("insert into " . TABLE_CONFIGURATION . " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Allow Banktranfer Payments', 'MODULE_PAYMENT_BANKTRANSFER_STATUS', 'True', 'Do you want to accept banktransfer payments?', '6', '1', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");
      tep_db_query("insert into " . TABLE_CONFIGURATION . " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, use_function, set_function, date_added) values ('Payment Zone', 'MODULE_PAYMENT_BANKTRANSFER_ZONE', '0', 'If a zone is selected, only enable this payment method for that zone.', '6', '2', 'tep_get_zone_class_title', 'tep_cfg_pull_down_zone_classes(', now())");
      tep_db_query("insert into " . TABLE_CONFIGURATION . " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Sort order of display.', 'MODULE_PAYMENT_BANKTRANSFER_SORT_ORDER', '0', 'Sort order of display. Lowest is displayed first.', '6', '0', now())");
      tep_db_query("insert into " . TABLE_CONFIGURATION . " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, use_function, date_added) values ('Set Order Status', 'MODULE_PAYMENT_BANKTRANSFER_ORDER_STATUS_ID', '0', 'Set the status of orders made with this payment module to this value', '6', '0', 'tep_cfg_pull_down_order_statuses(', 'tep_get_order_status_name', now())");
      tep_db_query("insert into " . TABLE_CONFIGURATION . " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Allow Fax Confirmation', 'MODULE_PAYMENT_BANKTRANSFER_FAX_CONFIRMATION', 'false', 'Do you want to allow fax confirmation?', '6', '2', 'tep_cfg_select_option(array(\'true\', \'false\'), ', now())");
      tep_db_query("insert into " . TABLE_CONFIGURATION . " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Use database lookup for BLZ?', 'MODULE_PAYMENT_BANKTRANSFER_DATABASE_BLZ', 'false', 'Do you want to use database lookup for BLZ? Ensure that the table banktransfer_blz exists and is set up properly!', '6', '0', 'tep_cfg_select_option(array(\'true\', \'false\'), ', now())");
      tep_db_query("insert into " . TABLE_CONFIGURATION . " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Fax-URL', 'MODULE_PAYMENT_BANKTRANSFER_URL_NOTE', 'fax.html', 'The fax-confirmation file. It must located in catalog-dir', '6', '0', now())");
      tep_db_query("CREATE TABLE IF NOT EXISTS ".TABLE_BANKTRANSFER." (orders_id int(11) NOT NULL default '0', banktransfer_owner varchar(64) default NULL, banktransfer_number varchar(24) default NULL, banktransfer_bankname varchar(64) default NULL, banktransfer_blz varchar(8) default NULL, banktransfer_status int(11) default NULL, banktransfer_prz char(2) default NULL, banktransfer_fax char(2) default NULL, KEY orders_id(orders_id))");
    }

    function remove() {
      tep_db_query("delete from " . TABLE_CONFIGURATION . " where configuration_key in ('" . implode("', '", $this->keys()) . "')");
    }

    function keys() {
      return array('MODULE_PAYMENT_BANKTRANSFER_STATUS', 'MODULE_PAYMENT_BANKTRANSFER_ZONE', 'MODULE_PAYMENT_BANKTRANSFER_ORDER_STATUS_ID', 'MODULE_PAYMENT_BANKTRANSFER_SORT_ORDER', 'MODULE_PAYMENT_BANKTRANSFER_DATABASE_BLZ', 'MODULE_PAYMENT_BANKTRANSFER_FAX_CONFIRMATION', 'MODULE_PAYMENT_BANKTRANSFER_URL_NOTE');
    }
  }
?>