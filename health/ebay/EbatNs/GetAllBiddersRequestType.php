<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'GetAllBiddersModeCodeType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

class GetAllBiddersRequestType extends AbstractRequestType
{
	// start props
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var GetAllBiddersModeCodeType $CallMode
	var $CallMode;
	// @var boolean $IncludeBiddingSummary
	var $IncludeBiddingSummary;
	// end props

/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return GetAllBiddersModeCodeType
 */
	function getCallMode()
	{
		return $this->CallMode;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCallMode($value)
	{
		$this->CallMode = $value;
	}
/**
 *

 * @return boolean
 */
	function getIncludeBiddingSummary()
	{
		return $this->IncludeBiddingSummary;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setIncludeBiddingSummary($value)
	{
		$this->IncludeBiddingSummary = $value;
	}
/**
 *

 * @return 
 */
	function GetAllBiddersRequestType()
	{
		$this->AbstractRequestType('GetAllBiddersRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CallMode' =>
				array(
					'required' => false,
					'type' => 'GetAllBiddersModeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'IncludeBiddingSummary' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
