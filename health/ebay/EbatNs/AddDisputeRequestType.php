<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'DisputeExplanationCodeType.php';
require_once 'DisputeReasonCodeType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

class AddDisputeRequestType extends AbstractRequestType
{
	// start props
	// @var DisputeExplanationCodeType $DisputeExplanation
	var $DisputeExplanation;
	// @var DisputeReasonCodeType $DisputeReason
	var $DisputeReason;
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var string $TransactionID
	var $TransactionID;
	// end props

/**
 *

 * @return DisputeExplanationCodeType
 */
	function getDisputeExplanation()
	{
		return $this->DisputeExplanation;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeExplanation($value)
	{
		$this->DisputeExplanation = $value;
	}
/**
 *

 * @return DisputeReasonCodeType
 */
	function getDisputeReason()
	{
		return $this->DisputeReason;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeReason($value)
	{
		$this->DisputeReason = $value;
	}
/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return string
 */
	function getTransactionID()
	{
		return $this->TransactionID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTransactionID($value)
	{
		$this->TransactionID = $value;
	}
/**
 *

 * @return 
 */
	function AddDisputeRequestType()
	{
		$this->AbstractRequestType('AddDisputeRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'DisputeExplanation' =>
				array(
					'required' => false,
					'type' => 'DisputeExplanationCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeReason' =>
				array(
					'required' => false,
					'type' => 'DisputeReasonCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TransactionID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
