<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'ListingStatusCodeType.php';
require_once 'OfferArrayType.php';
require_once 'AbstractResponseType.php';

class GetHighBiddersResponseType extends AbstractResponseType
{
	// start props
	// @var OfferArrayType $BidArray
	var $BidArray;
	// @var ListingStatusCodeType $ListingStatus
	var $ListingStatus;
	// end props

/**
 *

 * @return OfferArrayType
 */
	function getBidArray()
	{
		return $this->BidArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidArray($value)
	{
		$this->BidArray = $value;
	}
/**
 *

 * @return ListingStatusCodeType
 */
	function getListingStatus()
	{
		return $this->ListingStatus;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setListingStatus($value)
	{
		$this->ListingStatus = $value;
	}
/**
 *

 * @return 
 */
	function GetHighBiddersResponseType()
	{
		$this->AbstractResponseType('GetHighBiddersResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'BidArray' =>
				array(
					'required' => false,
					'type' => 'OfferArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ListingStatus' =>
				array(
					'required' => false,
					'type' => 'ListingStatusCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
