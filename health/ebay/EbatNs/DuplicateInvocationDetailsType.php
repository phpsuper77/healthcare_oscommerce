<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'InvocationStatusType.php';
require_once 'UUIDType.php';

class DuplicateInvocationDetailsType extends EbatNs_ComplexType
{
	// start props
	// @var UUIDType $DuplicateInvocationID
	var $DuplicateInvocationID;
	// @var InvocationStatusType $Status
	var $Status;
	// @var string $InvocationTrackingID
	var $InvocationTrackingID;
	// end props

/**
 *

 * @return UUIDType
 */
	function getDuplicateInvocationID()
	{
		return $this->DuplicateInvocationID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDuplicateInvocationID($value)
	{
		$this->DuplicateInvocationID = $value;
	}
/**
 *

 * @return InvocationStatusType
 */
	function getStatus()
	{
		return $this->Status;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setStatus($value)
	{
		$this->Status = $value;
	}
/**
 *

 * @return string
 */
	function getInvocationTrackingID()
	{
		return $this->InvocationTrackingID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setInvocationTrackingID($value)
	{
		$this->InvocationTrackingID = $value;
	}
/**
 *

 * @return 
 */
	function DuplicateInvocationDetailsType()
	{
		$this->EbatNs_ComplexType('DuplicateInvocationDetailsType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'DuplicateInvocationID' =>
				array(
					'required' => false,
					'type' => 'UUIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Status' =>
				array(
					'required' => false,
					'type' => 'InvocationStatusType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'InvocationTrackingID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
