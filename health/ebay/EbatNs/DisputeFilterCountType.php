<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'DisputeFilterTypeCodeType.php';

class DisputeFilterCountType extends EbatNs_ComplexType
{
	// start props
	// @var DisputeFilterTypeCodeType $DisputeFilterType
	var $DisputeFilterType;
	// @var int $TotalAvailable
	var $TotalAvailable;
	// end props

/**
 *

 * @return DisputeFilterTypeCodeType
 */
	function getDisputeFilterType()
	{
		return $this->DisputeFilterType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeFilterType($value)
	{
		$this->DisputeFilterType = $value;
	}
/**
 *

 * @return int
 */
	function getTotalAvailable()
	{
		return $this->TotalAvailable;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalAvailable($value)
	{
		$this->TotalAvailable = $value;
	}
/**
 *

 * @return 
 */
	function DisputeFilterCountType()
	{
		$this->EbatNs_ComplexType('DisputeFilterCountType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'DisputeFilterType' =>
				array(
					'required' => false,
					'type' => 'DisputeFilterTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalAvailable' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
