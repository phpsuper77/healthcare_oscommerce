<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'ProductFinderConstraintType.php';
require_once 'ProductFamilyType.php';

class ResponseAttributeSetType extends EbatNs_ComplexType
{
	// start props
	// @var int $ApproximatePages
	var $ApproximatePages;
	// @var int $AttributeSetID
	var $AttributeSetID;
	// @var boolean $HasMore
	var $HasMore;
	// @var ProductFamilyType $ProductFamilies
	var $ProductFamilies;
	// @var ProductFinderConstraintType $ProductFinderConstraints
	var $ProductFinderConstraints;
	// @var boolean $TooManyMatchesFound
	var $TooManyMatchesFound;
	// @var int $TotalProducts
	var $TotalProducts;
	// end props

/**
 *

 * @return int
 */
	function getApproximatePages()
	{
		return $this->ApproximatePages;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setApproximatePages($value)
	{
		$this->ApproximatePages = $value;
	}
/**
 *

 * @return int
 */
	function getAttributeSetID()
	{
		return $this->AttributeSetID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAttributeSetID($value)
	{
		$this->AttributeSetID = $value;
	}
/**
 *

 * @return boolean
 */
	function getHasMore()
	{
		return $this->HasMore;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setHasMore($value)
	{
		$this->HasMore = $value;
	}
/**
 *

 * @return ProductFamilyType
 * @param  $index 
 */
	function getProductFamilies($index = null)
	{
		if ($index) {
		return $this->ProductFamilies[$index];
	} else {
		return $this->ProductFamilies;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setProductFamilies($value, $index = null)
	{
		if ($index) {
	$this->ProductFamilies[$index] = $value;
	} else {
	$this->ProductFamilies = $value;
	}

	}
/**
 *

 * @return ProductFinderConstraintType
 * @param  $index 
 */
	function getProductFinderConstraints($index = null)
	{
		if ($index) {
		return $this->ProductFinderConstraints[$index];
	} else {
		return $this->ProductFinderConstraints;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setProductFinderConstraints($value, $index = null)
	{
		if ($index) {
	$this->ProductFinderConstraints[$index] = $value;
	} else {
	$this->ProductFinderConstraints = $value;
	}

	}
/**
 *

 * @return boolean
 */
	function getTooManyMatchesFound()
	{
		return $this->TooManyMatchesFound;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTooManyMatchesFound($value)
	{
		$this->TooManyMatchesFound = $value;
	}
/**
 *

 * @return int
 */
	function getTotalProducts()
	{
		return $this->TotalProducts;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalProducts($value)
	{
		$this->TotalProducts = $value;
	}
/**
 *

 * @return 
 */
	function ResponseAttributeSetType()
	{
		$this->EbatNs_ComplexType('ResponseAttributeSetType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ApproximatePages' =>
				array(
					'required' => true,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'AttributeSetID' =>
				array(
					'required' => true,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'HasMore' =>
				array(
					'required' => true,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'ProductFamilies' =>
				array(
					'required' => false,
					'type' => 'ProductFamilyType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'ProductFinderConstraints' =>
				array(
					'required' => false,
					'type' => 'ProductFinderConstraintType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'TooManyMatchesFound' =>
				array(
					'required' => true,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'TotalProducts' =>
				array(
					'required' => true,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				)
			));

	}
}
?>
