<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'VariationPictureRuleCodeType.php';
require_once 'SelectionModeCodeType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'ValueTypeCodeType.php';
require_once 'NameValueRelationshipType.php';
require_once 'VariationSpecificsRuleCodeType.php';

class RecommendationValidationRulesType extends EbatNs_ComplexType
{
	// start props
	// @var ValueTypeCodeType $ValueType
	var $ValueType;
	// @var int $MinValues
	var $MinValues;
	// @var int $MaxValues
	var $MaxValues;
	// @var SelectionModeCodeType $SelectionMode
	var $SelectionMode;
	// @var int $Confidence
	var $Confidence;
	// @var NameValueRelationshipType $Relationship
	var $Relationship;
	// @var VariationPictureRuleCodeType $VariationPicture
	var $VariationPicture;
	// @var VariationSpecificsRuleCodeType $VariationSpecifics
	var $VariationSpecifics;
	// end props

/**
 *

 * @return ValueTypeCodeType
 */
	function getValueType()
	{
		return $this->ValueType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setValueType($value)
	{
		$this->ValueType = $value;
	}
/**
 *

 * @return int
 */
	function getMinValues()
	{
		return $this->MinValues;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMinValues($value)
	{
		$this->MinValues = $value;
	}
/**
 *

 * @return int
 */
	function getMaxValues()
	{
		return $this->MaxValues;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMaxValues($value)
	{
		$this->MaxValues = $value;
	}
/**
 *

 * @return SelectionModeCodeType
 */
	function getSelectionMode()
	{
		return $this->SelectionMode;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSelectionMode($value)
	{
		$this->SelectionMode = $value;
	}
/**
 *

 * @return int
 */
	function getConfidence()
	{
		return $this->Confidence;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setConfidence($value)
	{
		$this->Confidence = $value;
	}
/**
 *

 * @return NameValueRelationshipType
 * @param  $index 
 */
	function getRelationship($index = null)
	{
		if ($index) {
		return $this->Relationship[$index];
	} else {
		return $this->Relationship;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setRelationship($value, $index = null)
	{
		if ($index) {
	$this->Relationship[$index] = $value;
	} else {
	$this->Relationship = $value;
	}

	}
/**
 *

 * @return VariationPictureRuleCodeType
 */
	function getVariationPicture()
	{
		return $this->VariationPicture;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setVariationPicture($value)
	{
		$this->VariationPicture = $value;
	}
/**
 *

 * @return VariationSpecificsRuleCodeType
 */
	function getVariationSpecifics()
	{
		return $this->VariationSpecifics;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setVariationSpecifics($value)
	{
		$this->VariationSpecifics = $value;
	}
/**
 *

 * @return 
 */
	function RecommendationValidationRulesType()
	{
		$this->EbatNs_ComplexType('RecommendationValidationRulesType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ValueType' =>
				array(
					'required' => false,
					'type' => 'ValueTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MinValues' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MaxValues' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SelectionMode' =>
				array(
					'required' => false,
					'type' => 'SelectionModeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Confidence' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Relationship' =>
				array(
					'required' => false,
					'type' => 'NameValueRelationshipType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'VariationPicture' =>
				array(
					'required' => false,
					'type' => 'VariationPictureRuleCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'VariationSpecifics' =>
				array(
					'required' => false,
					'type' => 'VariationSpecificsRuleCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
