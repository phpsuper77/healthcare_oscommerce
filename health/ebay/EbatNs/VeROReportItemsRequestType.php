<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'UserIDType.php';
require_once 'VeROReportItemsType.php';
require_once 'AbstractRequestType.php';

class VeROReportItemsRequestType extends AbstractRequestType
{
	// start props
	// @var UserIDType $RightsOwnerID
	var $RightsOwnerID;
	// @var VeROReportItemsType $ReportItems
	var $ReportItems;
	// end props

/**
 *

 * @return UserIDType
 */
	function getRightsOwnerID()
	{
		return $this->RightsOwnerID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRightsOwnerID($value)
	{
		$this->RightsOwnerID = $value;
	}
/**
 *

 * @return VeROReportItemsType
 */
	function getReportItems()
	{
		return $this->ReportItems;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setReportItems($value)
	{
		$this->ReportItems = $value;
	}
/**
 *

 * @return 
 */
	function VeROReportItemsRequestType()
	{
		$this->AbstractRequestType('VeROReportItemsRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'RightsOwnerID' =>
				array(
					'required' => false,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ReportItems' =>
				array(
					'required' => false,
					'type' => 'VeROReportItemsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
