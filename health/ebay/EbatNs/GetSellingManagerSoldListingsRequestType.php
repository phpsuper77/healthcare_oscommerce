<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'SellingManagerSoldListingsPropertyTypeCodeType.php';
require_once 'PaginationType.php';
require_once 'SellingManagerSoldListingsSortTypeCodeType.php';
require_once 'SellingManagerSearchType.php';
require_once 'SortOrderCodeType.php';
require_once 'TimeRangeType.php';
require_once 'AbstractRequestType.php';

class GetSellingManagerSoldListingsRequestType extends AbstractRequestType
{
	// start props
	// @var SellingManagerSearchType $Search
	var $Search;
	// @var long $StoreCategoryID
	var $StoreCategoryID;
	// @var SellingManagerSoldListingsPropertyTypeCodeType $Filter
	var $Filter;
	// @var boolean $Archived
	var $Archived;
	// @var SellingManagerSoldListingsSortTypeCodeType $Sort
	var $Sort;
	// @var SortOrderCodeType $SortOrder
	var $SortOrder;
	// @var PaginationType $Pagination
	var $Pagination;
	// @var TimeRangeType $SaleDateRange
	var $SaleDateRange;
	// end props

/**
 *

 * @return SellingManagerSearchType
 */
	function getSearch()
	{
		return $this->Search;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSearch($value)
	{
		$this->Search = $value;
	}
/**
 *

 * @return long
 */
	function getStoreCategoryID()
	{
		return $this->StoreCategoryID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setStoreCategoryID($value)
	{
		$this->StoreCategoryID = $value;
	}
/**
 *

 * @return SellingManagerSoldListingsPropertyTypeCodeType
 * @param  $index 
 */
	function getFilter($index = null)
	{
		if ($index) {
		return $this->Filter[$index];
	} else {
		return $this->Filter;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setFilter($value, $index = null)
	{
		if ($index) {
	$this->Filter[$index] = $value;
	} else {
	$this->Filter = $value;
	}

	}
/**
 *

 * @return boolean
 */
	function getArchived()
	{
		return $this->Archived;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setArchived($value)
	{
		$this->Archived = $value;
	}
/**
 *

 * @return SellingManagerSoldListingsSortTypeCodeType
 */
	function getSort()
	{
		return $this->Sort;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSort($value)
	{
		$this->Sort = $value;
	}
/**
 *

 * @return SortOrderCodeType
 */
	function getSortOrder()
	{
		return $this->SortOrder;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSortOrder($value)
	{
		$this->SortOrder = $value;
	}
/**
 *

 * @return PaginationType
 */
	function getPagination()
	{
		return $this->Pagination;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPagination($value)
	{
		$this->Pagination = $value;
	}
/**
 *

 * @return TimeRangeType
 */
	function getSaleDateRange()
	{
		return $this->SaleDateRange;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSaleDateRange($value)
	{
		$this->SaleDateRange = $value;
	}
/**
 *

 * @return 
 */
	function GetSellingManagerSoldListingsRequestType()
	{
		$this->AbstractRequestType('GetSellingManagerSoldListingsRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'Search' =>
				array(
					'required' => false,
					'type' => 'SellingManagerSearchType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'StoreCategoryID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Filter' =>
				array(
					'required' => false,
					'type' => 'SellingManagerSoldListingsPropertyTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'Archived' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Sort' =>
				array(
					'required' => false,
					'type' => 'SellingManagerSoldListingsSortTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SortOrder' =>
				array(
					'required' => false,
					'type' => 'SortOrderCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Pagination' =>
				array(
					'required' => false,
					'type' => 'PaginationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SaleDateRange' =>
				array(
					'required' => false,
					'type' => 'TimeRangeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
