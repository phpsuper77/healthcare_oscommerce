<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'UserIDType.php';
require_once 'SecondChanceOfferDurationCodeType.php';
require_once 'RecipientRelationCodeType.php';
require_once 'AmountType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

class AddTransactionConfirmationItemRequestType extends AbstractRequestType
{
	// start props
	// @var UserIDType $RecipientUserID
	var $RecipientUserID;
	// @var string $VerifyEligibilityOnly
	var $VerifyEligibilityOnly;
	// @var string $RecipientPostalCode
	var $RecipientPostalCode;
	// @var RecipientRelationCodeType $RecipientRelationType
	var $RecipientRelationType;
	// @var AmountType $NegotiatedPrice
	var $NegotiatedPrice;
	// @var SecondChanceOfferDurationCodeType $ListingDuration
	var $ListingDuration;
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var string $Comments
	var $Comments;
	// end props

/**
 *

 * @return UserIDType
 */
	function getRecipientUserID()
	{
		return $this->RecipientUserID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRecipientUserID($value)
	{
		$this->RecipientUserID = $value;
	}
/**
 *

 * @return string
 */
	function getVerifyEligibilityOnly()
	{
		return $this->VerifyEligibilityOnly;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setVerifyEligibilityOnly($value)
	{
		$this->VerifyEligibilityOnly = $value;
	}
/**
 *

 * @return string
 */
	function getRecipientPostalCode()
	{
		return $this->RecipientPostalCode;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRecipientPostalCode($value)
	{
		$this->RecipientPostalCode = $value;
	}
/**
 *

 * @return RecipientRelationCodeType
 */
	function getRecipientRelationType()
	{
		return $this->RecipientRelationType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRecipientRelationType($value)
	{
		$this->RecipientRelationType = $value;
	}
/**
 *

 * @return AmountType
 */
	function getNegotiatedPrice()
	{
		return $this->NegotiatedPrice;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setNegotiatedPrice($value)
	{
		$this->NegotiatedPrice = $value;
	}
/**
 *

 * @return SecondChanceOfferDurationCodeType
 */
	function getListingDuration()
	{
		return $this->ListingDuration;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setListingDuration($value)
	{
		$this->ListingDuration = $value;
	}
/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return string
 */
	function getComments()
	{
		return $this->Comments;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setComments($value)
	{
		$this->Comments = $value;
	}
/**
 *

 * @return 
 */
	function AddTransactionConfirmationItemRequestType()
	{
		$this->AbstractRequestType('AddTransactionConfirmationItemRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'RecipientUserID' =>
				array(
					'required' => true,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '1..1'
				),
				'VerifyEligibilityOnly' =>
				array(
					'required' => true,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'RecipientPostalCode' =>
				array(
					'required' => true,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'RecipientRelationType' =>
				array(
					'required' => true,
					'type' => 'RecipientRelationCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '1..1'
				),
				'NegotiatedPrice' =>
				array(
					'required' => true,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '1..1'
				),
				'ListingDuration' =>
				array(
					'required' => true,
					'type' => 'SecondChanceOfferDurationCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '1..1'
				),
				'ItemID' =>
				array(
					'required' => true,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '1..1'
				),
				'Comments' =>
				array(
					'required' => true,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				)
			));

	}
}
?>
