<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'ItemIDArrayType.php';
require_once 'ModifyActionCodeType.php';
require_once 'AbstractRequestType.php';

class SetPromotionalSaleListingsRequestType extends AbstractRequestType
{
	// start props
	// @var long $PromotionalSaleID
	var $PromotionalSaleID;
	// @var ModifyActionCodeType $Action
	var $Action;
	// @var ItemIDArrayType $PromotionalSaleItemIDArray
	var $PromotionalSaleItemIDArray;
	// @var long $StoreCategoryID
	var $StoreCategoryID;
	// @var long $CategoryID
	var $CategoryID;
	// @var boolean $AllFixedPriceItems
	var $AllFixedPriceItems;
	// @var boolean $AllStoreInventoryItems
	var $AllStoreInventoryItems;
	// @var boolean $AllAuctionItems
	var $AllAuctionItems;
	// end props

/**
 *

 * @return long
 */
	function getPromotionalSaleID()
	{
		return $this->PromotionalSaleID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPromotionalSaleID($value)
	{
		$this->PromotionalSaleID = $value;
	}
/**
 *

 * @return ModifyActionCodeType
 */
	function getAction()
	{
		return $this->Action;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAction($value)
	{
		$this->Action = $value;
	}
/**
 *

 * @return ItemIDArrayType
 */
	function getPromotionalSaleItemIDArray()
	{
		return $this->PromotionalSaleItemIDArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPromotionalSaleItemIDArray($value)
	{
		$this->PromotionalSaleItemIDArray = $value;
	}
/**
 *

 * @return long
 */
	function getStoreCategoryID()
	{
		return $this->StoreCategoryID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setStoreCategoryID($value)
	{
		$this->StoreCategoryID = $value;
	}
/**
 *

 * @return long
 */
	function getCategoryID()
	{
		return $this->CategoryID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategoryID($value)
	{
		$this->CategoryID = $value;
	}
/**
 *

 * @return boolean
 */
	function getAllFixedPriceItems()
	{
		return $this->AllFixedPriceItems;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAllFixedPriceItems($value)
	{
		$this->AllFixedPriceItems = $value;
	}
/**
 *

 * @return boolean
 */
	function getAllStoreInventoryItems()
	{
		return $this->AllStoreInventoryItems;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAllStoreInventoryItems($value)
	{
		$this->AllStoreInventoryItems = $value;
	}
/**
 *

 * @return boolean
 */
	function getAllAuctionItems()
	{
		return $this->AllAuctionItems;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAllAuctionItems($value)
	{
		$this->AllAuctionItems = $value;
	}
/**
 *

 * @return 
 */
	function SetPromotionalSaleListingsRequestType()
	{
		$this->AbstractRequestType('SetPromotionalSaleListingsRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'PromotionalSaleID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Action' =>
				array(
					'required' => false,
					'type' => 'ModifyActionCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PromotionalSaleItemIDArray' =>
				array(
					'required' => false,
					'type' => 'ItemIDArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'StoreCategoryID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CategoryID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AllFixedPriceItems' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AllStoreInventoryItems' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AllAuctionItems' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
