<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'MyMessagesFolderSummaryType.php';

class MyMessagesSummaryType extends EbatNs_ComplexType
{
	// start props
	// @var MyMessagesFolderSummaryType $FolderSummary
	var $FolderSummary;
	// @var int $NewAlertCount
	var $NewAlertCount;
	// @var int $NewMessageCount
	var $NewMessageCount;
	// @var int $UnresolvedAlertCount
	var $UnresolvedAlertCount;
	// @var int $FlaggedMessageCount
	var $FlaggedMessageCount;
	// @var int $TotalAlertCount
	var $TotalAlertCount;
	// @var int $TotalMessageCount
	var $TotalMessageCount;
	// end props

/**
 *

 * @return MyMessagesFolderSummaryType
 * @param  $index 
 */
	function getFolderSummary($index = null)
	{
		if ($index) {
		return $this->FolderSummary[$index];
	} else {
		return $this->FolderSummary;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setFolderSummary($value, $index = null)
	{
		if ($index) {
	$this->FolderSummary[$index] = $value;
	} else {
	$this->FolderSummary = $value;
	}

	}
/**
 *

 * @return int
 */
	function getNewAlertCount()
	{
		return $this->NewAlertCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setNewAlertCount($value)
	{
		$this->NewAlertCount = $value;
	}
/**
 *

 * @return int
 */
	function getNewMessageCount()
	{
		return $this->NewMessageCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setNewMessageCount($value)
	{
		$this->NewMessageCount = $value;
	}
/**
 *

 * @return int
 */
	function getUnresolvedAlertCount()
	{
		return $this->UnresolvedAlertCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setUnresolvedAlertCount($value)
	{
		$this->UnresolvedAlertCount = $value;
	}
/**
 *

 * @return int
 */
	function getFlaggedMessageCount()
	{
		return $this->FlaggedMessageCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFlaggedMessageCount($value)
	{
		$this->FlaggedMessageCount = $value;
	}
/**
 *

 * @return int
 */
	function getTotalAlertCount()
	{
		return $this->TotalAlertCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalAlertCount($value)
	{
		$this->TotalAlertCount = $value;
	}
/**
 *

 * @return int
 */
	function getTotalMessageCount()
	{
		return $this->TotalMessageCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalMessageCount($value)
	{
		$this->TotalMessageCount = $value;
	}
/**
 *

 * @return 
 */
	function MyMessagesSummaryType()
	{
		$this->EbatNs_ComplexType('MyMessagesSummaryType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'FolderSummary' =>
				array(
					'required' => false,
					'type' => 'MyMessagesFolderSummaryType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'NewAlertCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'NewMessageCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'UnresolvedAlertCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FlaggedMessageCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalAlertCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalMessageCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
