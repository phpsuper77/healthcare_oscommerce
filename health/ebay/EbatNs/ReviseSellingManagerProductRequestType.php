<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'SellingManagerProductDetailsType.php';
require_once 'SellingManagerProductSpecificsType.php';
require_once 'SellingManagerFolderDetailsType.php';
require_once 'AbstractRequestType.php';

class ReviseSellingManagerProductRequestType extends AbstractRequestType
{
	// start props
	// @var SellingManagerProductDetailsType $SellingManagerProductDetails
	var $SellingManagerProductDetails;
	// @var SellingManagerFolderDetailsType $SellingManagerFolderDetails
	var $SellingManagerFolderDetails;
	// @var string $DeletedField
	var $DeletedField;
	// @var SellingManagerProductSpecificsType $SellingManagerProductSpecifics
	var $SellingManagerProductSpecifics;
	// end props

/**
 *

 * @return SellingManagerProductDetailsType
 */
	function getSellingManagerProductDetails()
	{
		return $this->SellingManagerProductDetails;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellingManagerProductDetails($value)
	{
		$this->SellingManagerProductDetails = $value;
	}
/**
 *

 * @return SellingManagerFolderDetailsType
 */
	function getSellingManagerFolderDetails()
	{
		return $this->SellingManagerFolderDetails;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellingManagerFolderDetails($value)
	{
		$this->SellingManagerFolderDetails = $value;
	}
/**
 *

 * @return string
 * @param  $index 
 */
	function getDeletedField($index = null)
	{
		if ($index) {
		return $this->DeletedField[$index];
	} else {
		return $this->DeletedField;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setDeletedField($value, $index = null)
	{
		if ($index) {
	$this->DeletedField[$index] = $value;
	} else {
	$this->DeletedField = $value;
	}

	}
/**
 *

 * @return SellingManagerProductSpecificsType
 */
	function getSellingManagerProductSpecifics()
	{
		return $this->SellingManagerProductSpecifics;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellingManagerProductSpecifics($value)
	{
		$this->SellingManagerProductSpecifics = $value;
	}
/**
 *

 * @return 
 */
	function ReviseSellingManagerProductRequestType()
	{
		$this->AbstractRequestType('ReviseSellingManagerProductRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'SellingManagerProductDetails' =>
				array(
					'required' => false,
					'type' => 'SellingManagerProductDetailsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellingManagerFolderDetails' =>
				array(
					'required' => false,
					'type' => 'SellingManagerFolderDetailsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DeletedField' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => true,
					'cardinality' => '0..*'
				),
				'SellingManagerProductSpecifics' =>
				array(
					'required' => false,
					'type' => 'SellingManagerProductSpecificsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
