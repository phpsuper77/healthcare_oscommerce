<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'PictureManagerSubscriptionLevelCodeType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'AmountType.php';

class PictureManagerSubscriptionType extends EbatNs_ComplexType
{
	// start props
	// @var PictureManagerSubscriptionLevelCodeType $SubscriptionLevel
	var $SubscriptionLevel;
	// @var AmountType $Fee
	var $Fee;
	// @var int $StorageSize
	var $StorageSize;
	// end props

/**
 *

 * @return PictureManagerSubscriptionLevelCodeType
 */
	function getSubscriptionLevel()
	{
		return $this->SubscriptionLevel;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSubscriptionLevel($value)
	{
		$this->SubscriptionLevel = $value;
	}
/**
 *

 * @return AmountType
 */
	function getFee()
	{
		return $this->Fee;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFee($value)
	{
		$this->Fee = $value;
	}
/**
 *

 * @return int
 */
	function getStorageSize()
	{
		return $this->StorageSize;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setStorageSize($value)
	{
		$this->StorageSize = $value;
	}
/**
 *

 * @return 
 */
	function PictureManagerSubscriptionType()
	{
		$this->EbatNs_ComplexType('PictureManagerSubscriptionType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'SubscriptionLevel' =>
				array(
					'required' => false,
					'type' => 'PictureManagerSubscriptionLevelCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Fee' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'StorageSize' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
