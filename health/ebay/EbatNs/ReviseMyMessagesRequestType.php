<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'MyMessagesMessageIDArrayType.php';
require_once 'MyMessagesAlertIDArrayType.php';
require_once 'AbstractRequestType.php';

class ReviseMyMessagesRequestType extends AbstractRequestType
{
	// start props
	// @var MyMessagesMessageIDArrayType $MessageIDs
	var $MessageIDs;
	// @var MyMessagesAlertIDArrayType $AlertIDs
	var $AlertIDs;
	// @var boolean $Read
	var $Read;
	// @var boolean $Flagged
	var $Flagged;
	// @var long $FolderID
	var $FolderID;
	// end props

/**
 *

 * @return MyMessagesMessageIDArrayType
 */
	function getMessageIDs()
	{
		return $this->MessageIDs;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMessageIDs($value)
	{
		$this->MessageIDs = $value;
	}
/**
 *

 * @return MyMessagesAlertIDArrayType
 */
	function getAlertIDs()
	{
		return $this->AlertIDs;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAlertIDs($value)
	{
		$this->AlertIDs = $value;
	}
/**
 *

 * @return boolean
 */
	function getRead()
	{
		return $this->Read;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRead($value)
	{
		$this->Read = $value;
	}
/**
 *

 * @return boolean
 */
	function getFlagged()
	{
		return $this->Flagged;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFlagged($value)
	{
		$this->Flagged = $value;
	}
/**
 *

 * @return long
 */
	function getFolderID()
	{
		return $this->FolderID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFolderID($value)
	{
		$this->FolderID = $value;
	}
/**
 *

 * @return 
 */
	function ReviseMyMessagesRequestType()
	{
		$this->AbstractRequestType('ReviseMyMessagesRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'MessageIDs' =>
				array(
					'required' => false,
					'type' => 'MyMessagesMessageIDArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AlertIDs' =>
				array(
					'required' => false,
					'type' => 'MyMessagesAlertIDArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Read' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Flagged' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FolderID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
