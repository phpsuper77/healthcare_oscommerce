<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'ItemBidDetailsType.php';

class BiddingSummaryType extends EbatNs_ComplexType
{
	// start props
	// @var int $SummaryDays
	var $SummaryDays;
	// @var int $TotalBids
	var $TotalBids;
	// @var int $BidActivityWithSeller
	var $BidActivityWithSeller;
	// @var int $BidsToUniqueSellers
	var $BidsToUniqueSellers;
	// @var int $BidsToUniqueCategories
	var $BidsToUniqueCategories;
	// @var int $BidRetractions
	var $BidRetractions;
	// @var ItemBidDetailsType $ItemBidDetails
	var $ItemBidDetails;
	// end props

/**
 *

 * @return int
 */
	function getSummaryDays()
	{
		return $this->SummaryDays;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSummaryDays($value)
	{
		$this->SummaryDays = $value;
	}
/**
 *

 * @return int
 */
	function getTotalBids()
	{
		return $this->TotalBids;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalBids($value)
	{
		$this->TotalBids = $value;
	}
/**
 *

 * @return int
 */
	function getBidActivityWithSeller()
	{
		return $this->BidActivityWithSeller;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidActivityWithSeller($value)
	{
		$this->BidActivityWithSeller = $value;
	}
/**
 *

 * @return int
 */
	function getBidsToUniqueSellers()
	{
		return $this->BidsToUniqueSellers;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidsToUniqueSellers($value)
	{
		$this->BidsToUniqueSellers = $value;
	}
/**
 *

 * @return int
 */
	function getBidsToUniqueCategories()
	{
		return $this->BidsToUniqueCategories;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidsToUniqueCategories($value)
	{
		$this->BidsToUniqueCategories = $value;
	}
/**
 *

 * @return int
 */
	function getBidRetractions()
	{
		return $this->BidRetractions;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidRetractions($value)
	{
		$this->BidRetractions = $value;
	}
/**
 *

 * @return ItemBidDetailsType
 * @param  $index 
 */
	function getItemBidDetails($index = null)
	{
		if ($index) {
		return $this->ItemBidDetails[$index];
	} else {
		return $this->ItemBidDetails;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setItemBidDetails($value, $index = null)
	{
		if ($index) {
	$this->ItemBidDetails[$index] = $value;
	} else {
	$this->ItemBidDetails = $value;
	}

	}
/**
 *

 * @return 
 */
	function BiddingSummaryType()
	{
		$this->EbatNs_ComplexType('BiddingSummaryType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'SummaryDays' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalBids' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidActivityWithSeller' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidsToUniqueSellers' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidsToUniqueCategories' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidRetractions' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemBidDetails' =>
				array(
					'required' => false,
					'type' => 'ItemBidDetailsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				)
			));

	}
}
?>
