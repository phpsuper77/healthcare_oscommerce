<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'SellingManagerFolderDetailsType.php';

class SellingManagerFolderDetailsType extends EbatNs_ComplexType
{
	// start props
	// @var long $FolderID
	var $FolderID;
	// @var long $ParentFolderID
	var $ParentFolderID;
	// @var long $FolderLevel
	var $FolderLevel;
	// @var string $FolderName
	var $FolderName;
	// @var string $FolderComment
	var $FolderComment;
	// @var SellingManagerFolderDetailsType $ChildFolder
	var $ChildFolder;
	// @var dateTime $CreationTime
	var $CreationTime;
	// end props

/**
 *

 * @return long
 */
	function getFolderID()
	{
		return $this->FolderID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFolderID($value)
	{
		$this->FolderID = $value;
	}
/**
 *

 * @return long
 */
	function getParentFolderID()
	{
		return $this->ParentFolderID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setParentFolderID($value)
	{
		$this->ParentFolderID = $value;
	}
/**
 *

 * @return long
 */
	function getFolderLevel()
	{
		return $this->FolderLevel;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFolderLevel($value)
	{
		$this->FolderLevel = $value;
	}
/**
 *

 * @return string
 */
	function getFolderName()
	{
		return $this->FolderName;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFolderName($value)
	{
		$this->FolderName = $value;
	}
/**
 *

 * @return string
 */
	function getFolderComment()
	{
		return $this->FolderComment;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFolderComment($value)
	{
		$this->FolderComment = $value;
	}
/**
 *

 * @return SellingManagerFolderDetailsType
 * @param  $index 
 */
	function getChildFolder($index = null)
	{
		if ($index) {
		return $this->ChildFolder[$index];
	} else {
		return $this->ChildFolder;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setChildFolder($value, $index = null)
	{
		if ($index) {
	$this->ChildFolder[$index] = $value;
	} else {
	$this->ChildFolder = $value;
	}

	}
/**
 *

 * @return dateTime
 */
	function getCreationTime()
	{
		return $this->CreationTime;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCreationTime($value)
	{
		$this->CreationTime = $value;
	}
/**
 *

 * @return 
 */
	function SellingManagerFolderDetailsType()
	{
		$this->EbatNs_ComplexType('SellingManagerFolderDetailsType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'FolderID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ParentFolderID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FolderLevel' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FolderName' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FolderComment' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ChildFolder' =>
				array(
					'required' => false,
					'type' => 'SellingManagerFolderDetailsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'CreationTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
