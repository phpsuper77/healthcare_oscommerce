<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';

class RemindersType extends EbatNs_ComplexType
{
	// start props
	// @var int $PaymentToSendCount
	var $PaymentToSendCount;
	// @var int $FeedbackToReceiveCount
	var $FeedbackToReceiveCount;
	// @var int $FeedbackToSendCount
	var $FeedbackToSendCount;
	// @var int $OutbidCount
	var $OutbidCount;
	// @var int $PaymentToReceiveCount
	var $PaymentToReceiveCount;
	// @var int $SecondChanceOfferCount
	var $SecondChanceOfferCount;
	// @var int $ShippingNeededCount
	var $ShippingNeededCount;
	// @var int $RelistingNeededCount
	var $RelistingNeededCount;
	// @var int $TotalNewLeadsCount
	var $TotalNewLeadsCount;
	// @var int $DocsForCCProcessingToSendCount
	var $DocsForCCProcessingToSendCount;
	// @var int $RTEToProcessCount
	var $RTEToProcessCount;
	// @var int $ItemReceiptToConfirmCount
	var $ItemReceiptToConfirmCount;
	// @var int $RefundOnHoldCount
	var $RefundOnHoldCount;
	// @var int $RefundCancelledCount
	var $RefundCancelledCount;
	// @var int $ShippingDetailsToBeProvidedCount
	var $ShippingDetailsToBeProvidedCount;
	// @var int $ItemReceiptConfirmationToReceiveCount
	var $ItemReceiptConfirmationToReceiveCount;
	// @var int $RefundInitiatedCount
	var $RefundInitiatedCount;
	// @var int $PendingRTERequestCount
	var $PendingRTERequestCount;
	// @var int $DeclinedRTERequestCount
	var $DeclinedRTERequestCount;
	// end props

/**
 *

 * @return int
 */
	function getPaymentToSendCount()
	{
		return $this->PaymentToSendCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPaymentToSendCount($value)
	{
		$this->PaymentToSendCount = $value;
	}
/**
 *

 * @return int
 */
	function getFeedbackToReceiveCount()
	{
		return $this->FeedbackToReceiveCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFeedbackToReceiveCount($value)
	{
		$this->FeedbackToReceiveCount = $value;
	}
/**
 *

 * @return int
 */
	function getFeedbackToSendCount()
	{
		return $this->FeedbackToSendCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFeedbackToSendCount($value)
	{
		$this->FeedbackToSendCount = $value;
	}
/**
 *

 * @return int
 */
	function getOutbidCount()
	{
		return $this->OutbidCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setOutbidCount($value)
	{
		$this->OutbidCount = $value;
	}
/**
 *

 * @return int
 */
	function getPaymentToReceiveCount()
	{
		return $this->PaymentToReceiveCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPaymentToReceiveCount($value)
	{
		$this->PaymentToReceiveCount = $value;
	}
/**
 *

 * @return int
 */
	function getSecondChanceOfferCount()
	{
		return $this->SecondChanceOfferCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSecondChanceOfferCount($value)
	{
		$this->SecondChanceOfferCount = $value;
	}
/**
 *

 * @return int
 */
	function getShippingNeededCount()
	{
		return $this->ShippingNeededCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingNeededCount($value)
	{
		$this->ShippingNeededCount = $value;
	}
/**
 *

 * @return int
 */
	function getRelistingNeededCount()
	{
		return $this->RelistingNeededCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRelistingNeededCount($value)
	{
		$this->RelistingNeededCount = $value;
	}
/**
 *

 * @return int
 */
	function getTotalNewLeadsCount()
	{
		return $this->TotalNewLeadsCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalNewLeadsCount($value)
	{
		$this->TotalNewLeadsCount = $value;
	}
/**
 *

 * @return int
 */
	function getDocsForCCProcessingToSendCount()
	{
		return $this->DocsForCCProcessingToSendCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDocsForCCProcessingToSendCount($value)
	{
		$this->DocsForCCProcessingToSendCount = $value;
	}
/**
 *

 * @return int
 */
	function getRTEToProcessCount()
	{
		return $this->RTEToProcessCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRTEToProcessCount($value)
	{
		$this->RTEToProcessCount = $value;
	}
/**
 *

 * @return int
 */
	function getItemReceiptToConfirmCount()
	{
		return $this->ItemReceiptToConfirmCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemReceiptToConfirmCount($value)
	{
		$this->ItemReceiptToConfirmCount = $value;
	}
/**
 *

 * @return int
 */
	function getRefundOnHoldCount()
	{
		return $this->RefundOnHoldCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRefundOnHoldCount($value)
	{
		$this->RefundOnHoldCount = $value;
	}
/**
 *

 * @return int
 */
	function getRefundCancelledCount()
	{
		return $this->RefundCancelledCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRefundCancelledCount($value)
	{
		$this->RefundCancelledCount = $value;
	}
/**
 *

 * @return int
 */
	function getShippingDetailsToBeProvidedCount()
	{
		return $this->ShippingDetailsToBeProvidedCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingDetailsToBeProvidedCount($value)
	{
		$this->ShippingDetailsToBeProvidedCount = $value;
	}
/**
 *

 * @return int
 */
	function getItemReceiptConfirmationToReceiveCount()
	{
		return $this->ItemReceiptConfirmationToReceiveCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemReceiptConfirmationToReceiveCount($value)
	{
		$this->ItemReceiptConfirmationToReceiveCount = $value;
	}
/**
 *

 * @return int
 */
	function getRefundInitiatedCount()
	{
		return $this->RefundInitiatedCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRefundInitiatedCount($value)
	{
		$this->RefundInitiatedCount = $value;
	}
/**
 *

 * @return int
 */
	function getPendingRTERequestCount()
	{
		return $this->PendingRTERequestCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPendingRTERequestCount($value)
	{
		$this->PendingRTERequestCount = $value;
	}
/**
 *

 * @return int
 */
	function getDeclinedRTERequestCount()
	{
		return $this->DeclinedRTERequestCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDeclinedRTERequestCount($value)
	{
		$this->DeclinedRTERequestCount = $value;
	}
/**
 *

 * @return 
 */
	function RemindersType()
	{
		$this->EbatNs_ComplexType('RemindersType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'PaymentToSendCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FeedbackToReceiveCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FeedbackToSendCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'OutbidCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PaymentToReceiveCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SecondChanceOfferCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingNeededCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'RelistingNeededCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalNewLeadsCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DocsForCCProcessingToSendCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'RTEToProcessCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemReceiptToConfirmCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'RefundOnHoldCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'RefundCancelledCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingDetailsToBeProvidedCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemReceiptConfirmationToReceiveCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'RefundInitiatedCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PendingRTERequestCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DeclinedRTERequestCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
