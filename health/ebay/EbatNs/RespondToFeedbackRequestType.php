<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'UserIDType.php';
require_once 'FeedbackResponseCodeType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

class RespondToFeedbackRequestType extends AbstractRequestType
{
	// start props
	// @var string $FeedbackID
	var $FeedbackID;
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var string $TransactionID
	var $TransactionID;
	// @var UserIDType $TargetUserID
	var $TargetUserID;
	// @var FeedbackResponseCodeType $ResponseType
	var $ResponseType;
	// @var string $ResponseText
	var $ResponseText;
	// end props

/**
 *

 * @return string
 */
	function getFeedbackID()
	{
		return $this->FeedbackID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFeedbackID($value)
	{
		$this->FeedbackID = $value;
	}
/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return string
 */
	function getTransactionID()
	{
		return $this->TransactionID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTransactionID($value)
	{
		$this->TransactionID = $value;
	}
/**
 *

 * @return UserIDType
 */
	function getTargetUserID()
	{
		return $this->TargetUserID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTargetUserID($value)
	{
		$this->TargetUserID = $value;
	}
/**
 *

 * @return FeedbackResponseCodeType
 */
	function getResponseType()
	{
		return $this->ResponseType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setResponseType($value)
	{
		$this->ResponseType = $value;
	}
/**
 *

 * @return string
 */
	function getResponseText()
	{
		return $this->ResponseText;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setResponseText($value)
	{
		$this->ResponseText = $value;
	}
/**
 *

 * @return 
 */
	function RespondToFeedbackRequestType()
	{
		$this->AbstractRequestType('RespondToFeedbackRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'FeedbackID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TransactionID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TargetUserID' =>
				array(
					'required' => false,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ResponseType' =>
				array(
					'required' => false,
					'type' => 'FeedbackResponseCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ResponseText' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
