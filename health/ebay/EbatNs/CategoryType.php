<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'ExtendedProductFinderIDType.php';
require_once 'CharacteristicsSetType.php';

class CategoryType extends EbatNs_ComplexType
{
	// start props
	// @var boolean $BestOfferEnabled
	var $BestOfferEnabled;
	// @var boolean $AutoPayEnabled
	var $AutoPayEnabled;
	// @var boolean $B2BVATEnabled
	var $B2BVATEnabled;
	// @var boolean $CatalogEnabled
	var $CatalogEnabled;
	// @var string $CategoryID
	var $CategoryID;
	// @var int $CategoryLevel
	var $CategoryLevel;
	// @var string $CategoryName
	var $CategoryName;
	// @var string $CategoryParentID
	var $CategoryParentID;
	// @var string $CategoryParentName
	var $CategoryParentName;
	// @var boolean $ProductSearchPageAvailable
	var $ProductSearchPageAvailable;
	// @var ExtendedProductFinderIDType $ProductFinderIDs
	var $ProductFinderIDs;
	// @var CharacteristicsSetType $CharacteristicsSets
	var $CharacteristicsSets;
	// @var boolean $Expired
	var $Expired;
	// @var boolean $IntlAutosFixedCat
	var $IntlAutosFixedCat;
	// @var boolean $LeafCategory
	var $LeafCategory;
	// @var boolean $Virtual
	var $Virtual;
	// @var int $NumOfItems
	var $NumOfItems;
	// @var boolean $SellerGuaranteeEligible
	var $SellerGuaranteeEligible;
	// @var boolean $ORPA
	var $ORPA;
	// @var boolean $ORRA
	var $ORRA;
	// @var boolean $LSD
	var $LSD;
	// @var string $Keywords
	var $Keywords;
	// end props

/**
 *

 * @return boolean
 */
	function getBestOfferEnabled()
	{
		return $this->BestOfferEnabled;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBestOfferEnabled($value)
	{
		$this->BestOfferEnabled = $value;
	}
/**
 *

 * @return boolean
 */
	function getAutoPayEnabled()
	{
		return $this->AutoPayEnabled;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAutoPayEnabled($value)
	{
		$this->AutoPayEnabled = $value;
	}
/**
 *

 * @return boolean
 */
	function getB2BVATEnabled()
	{
		return $this->B2BVATEnabled;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setB2BVATEnabled($value)
	{
		$this->B2BVATEnabled = $value;
	}
/**
 *

 * @return boolean
 */
	function getCatalogEnabled()
	{
		return $this->CatalogEnabled;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCatalogEnabled($value)
	{
		$this->CatalogEnabled = $value;
	}
/**
 *

 * @return string
 */
	function getCategoryID()
	{
		return $this->CategoryID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategoryID($value)
	{
		$this->CategoryID = $value;
	}
/**
 *

 * @return int
 */
	function getCategoryLevel()
	{
		return $this->CategoryLevel;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategoryLevel($value)
	{
		$this->CategoryLevel = $value;
	}
/**
 *

 * @return string
 */
	function getCategoryName()
	{
		return $this->CategoryName;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategoryName($value)
	{
		$this->CategoryName = $value;
	}
/**
 *

 * @return string
 * @param  $index 
 */
	function getCategoryParentID($index = null)
	{
		if ($index) {
		return $this->CategoryParentID[$index];
	} else {
		return $this->CategoryParentID;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setCategoryParentID($value, $index = null)
	{
		if ($index) {
	$this->CategoryParentID[$index] = $value;
	} else {
	$this->CategoryParentID = $value;
	}

	}
/**
 *

 * @return string
 * @param  $index 
 */
	function getCategoryParentName($index = null)
	{
		if ($index) {
		return $this->CategoryParentName[$index];
	} else {
		return $this->CategoryParentName;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setCategoryParentName($value, $index = null)
	{
		if ($index) {
	$this->CategoryParentName[$index] = $value;
	} else {
	$this->CategoryParentName = $value;
	}

	}
/**
 *

 * @return boolean
 */
	function getProductSearchPageAvailable()
	{
		return $this->ProductSearchPageAvailable;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setProductSearchPageAvailable($value)
	{
		$this->ProductSearchPageAvailable = $value;
	}
/**
 *

 * @return ExtendedProductFinderIDType
 * @param  $index 
 */
	function getProductFinderIDs($index = null)
	{
		if ($index) {
		return $this->ProductFinderIDs[$index];
	} else {
		return $this->ProductFinderIDs;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setProductFinderIDs($value, $index = null)
	{
		if ($index) {
	$this->ProductFinderIDs[$index] = $value;
	} else {
	$this->ProductFinderIDs = $value;
	}

	}
/**
 *

 * @return CharacteristicsSetType
 * @param  $index 
 */
	function getCharacteristicsSets($index = null)
	{
		if ($index) {
		return $this->CharacteristicsSets[$index];
	} else {
		return $this->CharacteristicsSets;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setCharacteristicsSets($value, $index = null)
	{
		if ($index) {
	$this->CharacteristicsSets[$index] = $value;
	} else {
	$this->CharacteristicsSets = $value;
	}

	}
/**
 *

 * @return boolean
 */
	function getExpired()
	{
		return $this->Expired;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setExpired($value)
	{
		$this->Expired = $value;
	}
/**
 *

 * @return boolean
 */
	function getIntlAutosFixedCat()
	{
		return $this->IntlAutosFixedCat;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setIntlAutosFixedCat($value)
	{
		$this->IntlAutosFixedCat = $value;
	}
/**
 *

 * @return boolean
 */
	function getLeafCategory()
	{
		return $this->LeafCategory;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setLeafCategory($value)
	{
		$this->LeafCategory = $value;
	}
/**
 *

 * @return boolean
 */
	function getVirtual()
	{
		return $this->Virtual;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setVirtual($value)
	{
		$this->Virtual = $value;
	}
/**
 *

 * @return int
 */
	function getNumOfItems()
	{
		return $this->NumOfItems;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setNumOfItems($value)
	{
		$this->NumOfItems = $value;
	}
/**
 *

 * @return boolean
 */
	function getSellerGuaranteeEligible()
	{
		return $this->SellerGuaranteeEligible;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellerGuaranteeEligible($value)
	{
		$this->SellerGuaranteeEligible = $value;
	}
/**
 *

 * @return boolean
 */
	function getORPA()
	{
		return $this->ORPA;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setORPA($value)
	{
		$this->ORPA = $value;
	}
/**
 *

 * @return boolean
 */
	function getORRA()
	{
		return $this->ORRA;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setORRA($value)
	{
		$this->ORRA = $value;
	}
/**
 *

 * @return boolean
 */
	function getLSD()
	{
		return $this->LSD;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setLSD($value)
	{
		$this->LSD = $value;
	}
/**
 *

 * @return string
 */
	function getKeywords()
	{
		return $this->Keywords;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setKeywords($value)
	{
		$this->Keywords = $value;
	}
/**
 *

 * @return 
 */
	function CategoryType()
	{
		$this->EbatNs_ComplexType('CategoryType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'BestOfferEnabled' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AutoPayEnabled' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'B2BVATEnabled' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CatalogEnabled' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CategoryID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CategoryLevel' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CategoryName' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CategoryParentID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => true,
					'cardinality' => '0..*'
				),
				'CategoryParentName' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => true,
					'cardinality' => '0..*'
				),
				'ProductSearchPageAvailable' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ProductFinderIDs' =>
				array(
					'required' => false,
					'type' => 'ExtendedProductFinderIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'CharacteristicsSets' =>
				array(
					'required' => false,
					'type' => 'CharacteristicsSetType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'Expired' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'IntlAutosFixedCat' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LeafCategory' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Virtual' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'NumOfItems' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellerGuaranteeEligible' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ORPA' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ORRA' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LSD' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Keywords' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
