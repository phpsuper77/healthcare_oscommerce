<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'AbstractResponseType.php';
require_once 'SellerPaymentType.php';
require_once 'PaginationResultType.php';

class GetSellerPaymentsResponseType extends AbstractResponseType
{
	// start props
	// @var PaginationResultType $PaginationResult
	var $PaginationResult;
	// @var boolean $HasMorePayments
	var $HasMorePayments;
	// @var SellerPaymentType $SellerPayment
	var $SellerPayment;
	// @var int $PaymentsPerPage
	var $PaymentsPerPage;
	// @var int $PageNumber
	var $PageNumber;
	// @var int $ReturnedPaymentCountActual
	var $ReturnedPaymentCountActual;
	// end props

/**
 *

 * @return PaginationResultType
 */
	function getPaginationResult()
	{
		return $this->PaginationResult;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPaginationResult($value)
	{
		$this->PaginationResult = $value;
	}
/**
 *

 * @return boolean
 */
	function getHasMorePayments()
	{
		return $this->HasMorePayments;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setHasMorePayments($value)
	{
		$this->HasMorePayments = $value;
	}
/**
 *

 * @return SellerPaymentType
 * @param  $index 
 */
	function getSellerPayment($index = null)
	{
		if ($index) {
		return $this->SellerPayment[$index];
	} else {
		return $this->SellerPayment;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setSellerPayment($value, $index = null)
	{
		if ($index) {
	$this->SellerPayment[$index] = $value;
	} else {
	$this->SellerPayment = $value;
	}

	}
/**
 *

 * @return int
 */
	function getPaymentsPerPage()
	{
		return $this->PaymentsPerPage;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPaymentsPerPage($value)
	{
		$this->PaymentsPerPage = $value;
	}
/**
 *

 * @return int
 */
	function getPageNumber()
	{
		return $this->PageNumber;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPageNumber($value)
	{
		$this->PageNumber = $value;
	}
/**
 *

 * @return int
 */
	function getReturnedPaymentCountActual()
	{
		return $this->ReturnedPaymentCountActual;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setReturnedPaymentCountActual($value)
	{
		$this->ReturnedPaymentCountActual = $value;
	}
/**
 *

 * @return 
 */
	function GetSellerPaymentsResponseType()
	{
		$this->AbstractResponseType('GetSellerPaymentsResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'PaginationResult' =>
				array(
					'required' => false,
					'type' => 'PaginationResultType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'HasMorePayments' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellerPayment' =>
				array(
					'required' => false,
					'type' => 'SellerPaymentType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'PaymentsPerPage' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PageNumber' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ReturnedPaymentCountActual' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
