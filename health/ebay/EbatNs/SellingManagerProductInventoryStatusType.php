<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'AmountType.php';

class SellingManagerProductInventoryStatusType extends EbatNs_ComplexType
{
	// start props
	// @var int $QuantityScheduled
	var $QuantityScheduled;
	// @var int $QuantityActive
	var $QuantityActive;
	// @var int $QuantitySold
	var $QuantitySold;
	// @var int $QuantityUnsold
	var $QuantityUnsold;
	// @var float $SuccessPercent
	var $SuccessPercent;
	// @var AmountType $AverageSellingPrice
	var $AverageSellingPrice;
	// end props

/**
 *

 * @return int
 */
	function getQuantityScheduled()
	{
		return $this->QuantityScheduled;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuantityScheduled($value)
	{
		$this->QuantityScheduled = $value;
	}
/**
 *

 * @return int
 */
	function getQuantityActive()
	{
		return $this->QuantityActive;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuantityActive($value)
	{
		$this->QuantityActive = $value;
	}
/**
 *

 * @return int
 */
	function getQuantitySold()
	{
		return $this->QuantitySold;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuantitySold($value)
	{
		$this->QuantitySold = $value;
	}
/**
 *

 * @return int
 */
	function getQuantityUnsold()
	{
		return $this->QuantityUnsold;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuantityUnsold($value)
	{
		$this->QuantityUnsold = $value;
	}
/**
 *

 * @return float
 */
	function getSuccessPercent()
	{
		return $this->SuccessPercent;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSuccessPercent($value)
	{
		$this->SuccessPercent = $value;
	}
/**
 *

 * @return AmountType
 */
	function getAverageSellingPrice()
	{
		return $this->AverageSellingPrice;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAverageSellingPrice($value)
	{
		$this->AverageSellingPrice = $value;
	}
/**
 *

 * @return 
 */
	function SellingManagerProductInventoryStatusType()
	{
		$this->EbatNs_ComplexType('SellingManagerProductInventoryStatusType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'QuantityScheduled' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'QuantityActive' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'QuantitySold' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'QuantityUnsold' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SuccessPercent' =>
				array(
					'required' => false,
					'type' => 'float',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AverageSellingPrice' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
