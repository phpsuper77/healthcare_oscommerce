<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';

class VerifiedUserRequirementsDetailsType extends EbatNs_ComplexType
{
	// start props
	// @var boolean $VerifiedUser
	var $VerifiedUser;
	// @var int $FeedbackScore
	var $FeedbackScore;
	// end props

/**
 *

 * @return boolean
 */
	function getVerifiedUser()
	{
		return $this->VerifiedUser;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setVerifiedUser($value)
	{
		$this->VerifiedUser = $value;
	}
/**
 *

 * @return int
 * @param  $index 
 */
	function getFeedbackScore($index = null)
	{
		if ($index) {
		return $this->FeedbackScore[$index];
	} else {
		return $this->FeedbackScore;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setFeedbackScore($value, $index = null)
	{
		if ($index) {
	$this->FeedbackScore[$index] = $value;
	} else {
	$this->FeedbackScore = $value;
	}

	}
/**
 *

 * @return 
 */
	function VerifiedUserRequirementsDetailsType()
	{
		$this->EbatNs_ComplexType('VerifiedUserRequirementsDetailsType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'VerifiedUser' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FeedbackScore' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => true,
					'cardinality' => '0..*'
				)
			));

	}
}
?>
