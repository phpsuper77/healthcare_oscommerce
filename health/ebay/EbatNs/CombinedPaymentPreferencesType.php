<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'CalculatedShippingPreferencesType.php';
require_once 'CombinedPaymentOptionCodeType.php';
require_once 'FlatShippingPreferencesType.php';
require_once 'CombinedPaymentPeriodCodeType.php';

class CombinedPaymentPreferencesType extends EbatNs_ComplexType
{
	// start props
	// @var CalculatedShippingPreferencesType $CalculatedShippingPreferences
	var $CalculatedShippingPreferences;
	// @var CombinedPaymentOptionCodeType $CombinedPaymentOption
	var $CombinedPaymentOption;
	// @var CombinedPaymentPeriodCodeType $CombinedPaymentPeriod
	var $CombinedPaymentPeriod;
	// @var FlatShippingPreferencesType $FlatShippingPreferences
	var $FlatShippingPreferences;
	// end props

/**
 *

 * @return CalculatedShippingPreferencesType
 */
	function getCalculatedShippingPreferences()
	{
		return $this->CalculatedShippingPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCalculatedShippingPreferences($value)
	{
		$this->CalculatedShippingPreferences = $value;
	}
/**
 *

 * @return CombinedPaymentOptionCodeType
 */
	function getCombinedPaymentOption()
	{
		return $this->CombinedPaymentOption;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCombinedPaymentOption($value)
	{
		$this->CombinedPaymentOption = $value;
	}
/**
 *

 * @return CombinedPaymentPeriodCodeType
 */
	function getCombinedPaymentPeriod()
	{
		return $this->CombinedPaymentPeriod;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCombinedPaymentPeriod($value)
	{
		$this->CombinedPaymentPeriod = $value;
	}
/**
 *

 * @return FlatShippingPreferencesType
 */
	function getFlatShippingPreferences()
	{
		return $this->FlatShippingPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFlatShippingPreferences($value)
	{
		$this->FlatShippingPreferences = $value;
	}
/**
 *

 * @return 
 */
	function CombinedPaymentPreferencesType()
	{
		$this->EbatNs_ComplexType('CombinedPaymentPreferencesType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'CalculatedShippingPreferences' =>
				array(
					'required' => false,
					'type' => 'CalculatedShippingPreferencesType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CombinedPaymentOption' =>
				array(
					'required' => false,
					'type' => 'CombinedPaymentOptionCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CombinedPaymentPeriod' =>
				array(
					'required' => false,
					'type' => 'CombinedPaymentPeriodCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FlatShippingPreferences' =>
				array(
					'required' => false,
					'type' => 'FlatShippingPreferencesType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
