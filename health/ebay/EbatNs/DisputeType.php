<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'DisputeIDType.php';
require_once 'DisputeExplanationCodeType.php';
require_once 'TradingRoleCodeType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'UserIDType.php';
require_once 'ItemType.php';
require_once 'DisputeStateCodeType.php';
require_once 'DisputeResolutionType.php';
require_once 'DisputeCreditEligibilityCodeType.php';
require_once 'DisputeReasonCodeType.php';
require_once 'DisputeMessageType.php';
require_once 'DisputeRecordTypeCodeType.php';
require_once 'DisputeStatusCodeType.php';

class DisputeType extends EbatNs_ComplexType
{
	// start props
	// @var DisputeIDType $DisputeID
	var $DisputeID;
	// @var DisputeRecordTypeCodeType $DisputeRecordType
	var $DisputeRecordType;
	// @var DisputeStateCodeType $DisputeState
	var $DisputeState;
	// @var DisputeStatusCodeType $DisputeStatus
	var $DisputeStatus;
	// @var TradingRoleCodeType $OtherPartyRole
	var $OtherPartyRole;
	// @var string $OtherPartyName
	var $OtherPartyName;
	// @var TradingRoleCodeType $UserRole
	var $UserRole;
	// @var UserIDType $BuyerUserID
	var $BuyerUserID;
	// @var UserIDType $SellerUserID
	var $SellerUserID;
	// @var string $TransactionID
	var $TransactionID;
	// @var ItemType $Item
	var $Item;
	// @var DisputeReasonCodeType $DisputeReason
	var $DisputeReason;
	// @var DisputeExplanationCodeType $DisputeExplanation
	var $DisputeExplanation;
	// @var DisputeCreditEligibilityCodeType $DisputeCreditEligibility
	var $DisputeCreditEligibility;
	// @var dateTime $DisputeCreatedTime
	var $DisputeCreatedTime;
	// @var dateTime $DisputeModifiedTime
	var $DisputeModifiedTime;
	// @var DisputeResolutionType $DisputeResolution
	var $DisputeResolution;
	// @var DisputeMessageType $DisputeMessage
	var $DisputeMessage;
	// @var boolean $Escalation
	var $Escalation;
	// @var boolean $PurchaseProtection
	var $PurchaseProtection;
	// end props

/**
 *

 * @return DisputeIDType
 */
	function getDisputeID()
	{
		return $this->DisputeID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeID($value)
	{
		$this->DisputeID = $value;
	}
/**
 *

 * @return DisputeRecordTypeCodeType
 */
	function getDisputeRecordType()
	{
		return $this->DisputeRecordType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeRecordType($value)
	{
		$this->DisputeRecordType = $value;
	}
/**
 *

 * @return DisputeStateCodeType
 */
	function getDisputeState()
	{
		return $this->DisputeState;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeState($value)
	{
		$this->DisputeState = $value;
	}
/**
 *

 * @return DisputeStatusCodeType
 */
	function getDisputeStatus()
	{
		return $this->DisputeStatus;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeStatus($value)
	{
		$this->DisputeStatus = $value;
	}
/**
 *

 * @return TradingRoleCodeType
 */
	function getOtherPartyRole()
	{
		return $this->OtherPartyRole;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setOtherPartyRole($value)
	{
		$this->OtherPartyRole = $value;
	}
/**
 *

 * @return string
 */
	function getOtherPartyName()
	{
		return $this->OtherPartyName;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setOtherPartyName($value)
	{
		$this->OtherPartyName = $value;
	}
/**
 *

 * @return TradingRoleCodeType
 */
	function getUserRole()
	{
		return $this->UserRole;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setUserRole($value)
	{
		$this->UserRole = $value;
	}
/**
 *

 * @return UserIDType
 */
	function getBuyerUserID()
	{
		return $this->BuyerUserID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBuyerUserID($value)
	{
		$this->BuyerUserID = $value;
	}
/**
 *

 * @return UserIDType
 */
	function getSellerUserID()
	{
		return $this->SellerUserID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellerUserID($value)
	{
		$this->SellerUserID = $value;
	}
/**
 *

 * @return string
 */
	function getTransactionID()
	{
		return $this->TransactionID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTransactionID($value)
	{
		$this->TransactionID = $value;
	}
/**
 *

 * @return ItemType
 */
	function getItem()
	{
		return $this->Item;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItem($value)
	{
		$this->Item = $value;
	}
/**
 *

 * @return DisputeReasonCodeType
 */
	function getDisputeReason()
	{
		return $this->DisputeReason;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeReason($value)
	{
		$this->DisputeReason = $value;
	}
/**
 *

 * @return DisputeExplanationCodeType
 */
	function getDisputeExplanation()
	{
		return $this->DisputeExplanation;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeExplanation($value)
	{
		$this->DisputeExplanation = $value;
	}
/**
 *

 * @return DisputeCreditEligibilityCodeType
 */
	function getDisputeCreditEligibility()
	{
		return $this->DisputeCreditEligibility;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeCreditEligibility($value)
	{
		$this->DisputeCreditEligibility = $value;
	}
/**
 *

 * @return dateTime
 */
	function getDisputeCreatedTime()
	{
		return $this->DisputeCreatedTime;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeCreatedTime($value)
	{
		$this->DisputeCreatedTime = $value;
	}
/**
 *

 * @return dateTime
 */
	function getDisputeModifiedTime()
	{
		return $this->DisputeModifiedTime;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisputeModifiedTime($value)
	{
		$this->DisputeModifiedTime = $value;
	}
/**
 *

 * @return DisputeResolutionType
 * @param  $index 
 */
	function getDisputeResolution($index = null)
	{
		if ($index) {
		return $this->DisputeResolution[$index];
	} else {
		return $this->DisputeResolution;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setDisputeResolution($value, $index = null)
	{
		if ($index) {
	$this->DisputeResolution[$index] = $value;
	} else {
	$this->DisputeResolution = $value;
	}

	}
/**
 *

 * @return DisputeMessageType
 * @param  $index 
 */
	function getDisputeMessage($index = null)
	{
		if ($index) {
		return $this->DisputeMessage[$index];
	} else {
		return $this->DisputeMessage;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setDisputeMessage($value, $index = null)
	{
		if ($index) {
	$this->DisputeMessage[$index] = $value;
	} else {
	$this->DisputeMessage = $value;
	}

	}
/**
 *

 * @return boolean
 */
	function getEscalation()
	{
		return $this->Escalation;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setEscalation($value)
	{
		$this->Escalation = $value;
	}
/**
 *

 * @return boolean
 */
	function getPurchaseProtection()
	{
		return $this->PurchaseProtection;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPurchaseProtection($value)
	{
		$this->PurchaseProtection = $value;
	}
/**
 *

 * @return 
 */
	function DisputeType()
	{
		$this->EbatNs_ComplexType('DisputeType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'DisputeID' =>
				array(
					'required' => false,
					'type' => 'DisputeIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeRecordType' =>
				array(
					'required' => false,
					'type' => 'DisputeRecordTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeState' =>
				array(
					'required' => false,
					'type' => 'DisputeStateCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeStatus' =>
				array(
					'required' => false,
					'type' => 'DisputeStatusCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'OtherPartyRole' =>
				array(
					'required' => false,
					'type' => 'TradingRoleCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'OtherPartyName' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'UserRole' =>
				array(
					'required' => false,
					'type' => 'TradingRoleCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BuyerUserID' =>
				array(
					'required' => false,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellerUserID' =>
				array(
					'required' => false,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TransactionID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Item' =>
				array(
					'required' => false,
					'type' => 'ItemType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeReason' =>
				array(
					'required' => false,
					'type' => 'DisputeReasonCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeExplanation' =>
				array(
					'required' => false,
					'type' => 'DisputeExplanationCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeCreditEligibility' =>
				array(
					'required' => false,
					'type' => 'DisputeCreditEligibilityCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeCreatedTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeModifiedTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisputeResolution' =>
				array(
					'required' => false,
					'type' => 'DisputeResolutionType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'DisputeMessage' =>
				array(
					'required' => false,
					'type' => 'DisputeMessageType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'Escalation' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PurchaseProtection' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
