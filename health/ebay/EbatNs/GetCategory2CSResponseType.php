<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'SiteWideCharacteristicsType.php';
require_once 'AbstractResponseType.php';
require_once 'CategoryArrayType.php';

class GetCategory2CSResponseType extends AbstractResponseType
{
	// start props
	// @var CategoryArrayType $MappedCategoryArray
	var $MappedCategoryArray;
	// @var CategoryArrayType $UnmappedCategoryArray
	var $UnmappedCategoryArray;
	// @var string $AttributeSystemVersion
	var $AttributeSystemVersion;
	// @var SiteWideCharacteristicsType $SiteWideCharacteristicSets
	var $SiteWideCharacteristicSets;
	// end props

/**
 *

 * @return CategoryArrayType
 */
	function getMappedCategoryArray()
	{
		return $this->MappedCategoryArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMappedCategoryArray($value)
	{
		$this->MappedCategoryArray = $value;
	}
/**
 *

 * @return CategoryArrayType
 */
	function getUnmappedCategoryArray()
	{
		return $this->UnmappedCategoryArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setUnmappedCategoryArray($value)
	{
		$this->UnmappedCategoryArray = $value;
	}
/**
 *

 * @return string
 */
	function getAttributeSystemVersion()
	{
		return $this->AttributeSystemVersion;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAttributeSystemVersion($value)
	{
		$this->AttributeSystemVersion = $value;
	}
/**
 *

 * @return SiteWideCharacteristicsType
 * @param  $index 
 */
	function getSiteWideCharacteristicSets($index = null)
	{
		if ($index) {
		return $this->SiteWideCharacteristicSets[$index];
	} else {
		return $this->SiteWideCharacteristicSets;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setSiteWideCharacteristicSets($value, $index = null)
	{
		if ($index) {
	$this->SiteWideCharacteristicSets[$index] = $value;
	} else {
	$this->SiteWideCharacteristicSets = $value;
	}

	}
/**
 *

 * @return 
 */
	function GetCategory2CSResponseType()
	{
		$this->AbstractResponseType('GetCategory2CSResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'MappedCategoryArray' =>
				array(
					'required' => false,
					'type' => 'CategoryArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'UnmappedCategoryArray' =>
				array(
					'required' => false,
					'type' => 'CategoryArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AttributeSystemVersion' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SiteWideCharacteristicSets' =>
				array(
					'required' => false,
					'type' => 'SiteWideCharacteristicsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				)
			));

	}
}
?>
