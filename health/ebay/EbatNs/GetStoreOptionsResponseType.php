<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'StoreThemeArrayType.php';
require_once 'AbstractResponseType.php';
require_once 'StoreLogoArrayType.php';
require_once 'StoreSubscriptionArrayType.php';

class GetStoreOptionsResponseType extends AbstractResponseType
{
	// start props
	// @var StoreThemeArrayType $BasicThemeArray
	var $BasicThemeArray;
	// @var StoreThemeArrayType $AdvancedThemeArray
	var $AdvancedThemeArray;
	// @var StoreLogoArrayType $LogoArray
	var $LogoArray;
	// @var StoreSubscriptionArrayType $SubscriptionArray
	var $SubscriptionArray;
	// @var int $MaxCategories
	var $MaxCategories;
	// @var int $MaxCategoryLevels
	var $MaxCategoryLevels;
	// end props

/**
 *

 * @return StoreThemeArrayType
 */
	function getBasicThemeArray()
	{
		return $this->BasicThemeArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBasicThemeArray($value)
	{
		$this->BasicThemeArray = $value;
	}
/**
 *

 * @return StoreThemeArrayType
 */
	function getAdvancedThemeArray()
	{
		return $this->AdvancedThemeArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAdvancedThemeArray($value)
	{
		$this->AdvancedThemeArray = $value;
	}
/**
 *

 * @return StoreLogoArrayType
 */
	function getLogoArray()
	{
		return $this->LogoArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setLogoArray($value)
	{
		$this->LogoArray = $value;
	}
/**
 *

 * @return StoreSubscriptionArrayType
 */
	function getSubscriptionArray()
	{
		return $this->SubscriptionArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSubscriptionArray($value)
	{
		$this->SubscriptionArray = $value;
	}
/**
 *

 * @return int
 */
	function getMaxCategories()
	{
		return $this->MaxCategories;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMaxCategories($value)
	{
		$this->MaxCategories = $value;
	}
/**
 *

 * @return int
 */
	function getMaxCategoryLevels()
	{
		return $this->MaxCategoryLevels;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMaxCategoryLevels($value)
	{
		$this->MaxCategoryLevels = $value;
	}
/**
 *

 * @return 
 */
	function GetStoreOptionsResponseType()
	{
		$this->AbstractResponseType('GetStoreOptionsResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'BasicThemeArray' =>
				array(
					'required' => false,
					'type' => 'StoreThemeArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AdvancedThemeArray' =>
				array(
					'required' => false,
					'type' => 'StoreThemeArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LogoArray' =>
				array(
					'required' => false,
					'type' => 'StoreLogoArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SubscriptionArray' =>
				array(
					'required' => false,
					'type' => 'StoreSubscriptionArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MaxCategories' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MaxCategoryLevels' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
