<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'AmountType.php';

class ShippingServiceOptionsType extends EbatNs_ComplexType
{
	// start props
	// @var AmountType $ShippingInsuranceCost
	var $ShippingInsuranceCost;
	// @var token $ShippingService
	var $ShippingService;
	// @var AmountType $ShippingServiceCost
	var $ShippingServiceCost;
	// @var AmountType $ShippingServiceAdditionalCost
	var $ShippingServiceAdditionalCost;
	// @var int $ShippingServicePriority
	var $ShippingServicePriority;
	// @var boolean $ExpeditedService
	var $ExpeditedService;
	// @var int $ShippingTimeMin
	var $ShippingTimeMin;
	// @var int $ShippingTimeMax
	var $ShippingTimeMax;
	// @var AmountType $ShippingSurcharge
	var $ShippingSurcharge;
	// @var boolean $FreeShipping
	var $FreeShipping;
	// end props

/**
 *

 * @return AmountType
 */
	function getShippingInsuranceCost()
	{
		return $this->ShippingInsuranceCost;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingInsuranceCost($value)
	{
		$this->ShippingInsuranceCost = $value;
	}
/**
 *

 * @return token
 */
	function getShippingService()
	{
		return $this->ShippingService;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingService($value)
	{
		$this->ShippingService = $value;
	}
/**
 *

 * @return AmountType
 */
	function getShippingServiceCost()
	{
		return $this->ShippingServiceCost;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingServiceCost($value)
	{
		$this->ShippingServiceCost = $value;
	}
/**
 *

 * @return AmountType
 */
	function getShippingServiceAdditionalCost()
	{
		return $this->ShippingServiceAdditionalCost;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingServiceAdditionalCost($value)
	{
		$this->ShippingServiceAdditionalCost = $value;
	}
/**
 *

 * @return int
 */
	function getShippingServicePriority()
	{
		return $this->ShippingServicePriority;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingServicePriority($value)
	{
		$this->ShippingServicePriority = $value;
	}
/**
 *

 * @return boolean
 */
	function getExpeditedService()
	{
		return $this->ExpeditedService;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setExpeditedService($value)
	{
		$this->ExpeditedService = $value;
	}
/**
 *

 * @return int
 */
	function getShippingTimeMin()
	{
		return $this->ShippingTimeMin;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingTimeMin($value)
	{
		$this->ShippingTimeMin = $value;
	}
/**
 *

 * @return int
 */
	function getShippingTimeMax()
	{
		return $this->ShippingTimeMax;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingTimeMax($value)
	{
		$this->ShippingTimeMax = $value;
	}
/**
 *

 * @return AmountType
 */
	function getShippingSurcharge()
	{
		return $this->ShippingSurcharge;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShippingSurcharge($value)
	{
		$this->ShippingSurcharge = $value;
	}
/**
 *

 * @return boolean
 */
	function getFreeShipping()
	{
		return $this->FreeShipping;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFreeShipping($value)
	{
		$this->FreeShipping = $value;
	}
/**
 *

 * @return 
 */
	function ShippingServiceOptionsType()
	{
		$this->EbatNs_ComplexType('ShippingServiceOptionsType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ShippingInsuranceCost' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingService' =>
				array(
					'required' => false,
					'type' => 'token',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingServiceCost' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingServiceAdditionalCost' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingServicePriority' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ExpeditedService' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingTimeMin' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingTimeMax' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingSurcharge' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FreeShipping' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
