<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'ProductUseCaseCodeType.php';
require_once 'ProductType.php';
require_once 'AbstractRequestType.php';

class GetProductSellingPagesRequestType extends AbstractRequestType
{
	// start props
	// @var ProductUseCaseCodeType $UseCase
	var $UseCase;
	// @var ProductType $Product
	var $Product;
	// end props

/**
 *

 * @return ProductUseCaseCodeType
 */
	function getUseCase()
	{
		return $this->UseCase;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setUseCase($value)
	{
		$this->UseCase = $value;
	}
/**
 *

 * @return ProductType
 * @param  $index 
 */
	function getProduct($index = null)
	{
		if ($index) {
		return $this->Product[$index];
	} else {
		return $this->Product;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setProduct($value, $index = null)
	{
		if ($index) {
	$this->Product[$index] = $value;
	} else {
	$this->Product = $value;
	}

	}
/**
 *

 * @return 
 */
	function GetProductSellingPagesRequestType()
	{
		$this->AbstractRequestType('GetProductSellingPagesRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'UseCase' =>
				array(
					'required' => false,
					'type' => 'ProductUseCaseCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Product' =>
				array(
					'required' => false,
					'type' => 'ProductType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				)
			));

	}
}
?>
