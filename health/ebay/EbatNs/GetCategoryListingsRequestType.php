<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'PaginationType.php';
require_once 'SearchLocationType.php';
require_once 'CategoryListingsOrderCodeType.php';
require_once 'CurrencyCodeType.php';
require_once 'ProximitySearchType.php';
require_once 'PaymentMethodSearchCodeType.php';
require_once 'GroupType.php';
require_once 'AbstractRequestType.php';
require_once 'CategoryListingsSearchCodeType.php';
require_once 'ItemTypeFilterCodeType.php';

class GetCategoryListingsRequestType extends AbstractRequestType
{
	// start props
	// @var boolean $MotorsGermanySearchable
	var $MotorsGermanySearchable;
	// @var string $CategoryID
	var $CategoryID;
	// @var boolean $AdFormat
	var $AdFormat;
	// @var boolean $FreeShipping
	var $FreeShipping;
	// @var CurrencyCodeType $Currency
	var $Currency;
	// @var ItemTypeFilterCodeType $ItemTypeFilter
	var $ItemTypeFilter;
	// @var CategoryListingsSearchCodeType $SearchType
	var $SearchType;
	// @var CategoryListingsOrderCodeType $OrderBy
	var $OrderBy;
	// @var PaginationType $Pagination
	var $Pagination;
	// @var SearchLocationType $SearchLocation
	var $SearchLocation;
	// @var ProximitySearchType $ProximitySearch
	var $ProximitySearch;
	// @var boolean $IncludeGetItFastItems
	var $IncludeGetItFastItems;
	// @var PaymentMethodSearchCodeType $PaymentMethod
	var $PaymentMethod;
	// @var boolean $IncludeCondition
	var $IncludeCondition;
	// @var boolean $IncludeFeedback
	var $IncludeFeedback;
	// @var string $LocalSearchPostalCode
	var $LocalSearchPostalCode;
	// @var int $MaxRelatedSearchKeywords
	var $MaxRelatedSearchKeywords;
	// @var GroupType $Group
	var $Group;
	// @var boolean $HideDuplicateItems
	var $HideDuplicateItems;
	// end props

/**
 *

 * @return boolean
 */
	function getMotorsGermanySearchable()
	{
		return $this->MotorsGermanySearchable;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMotorsGermanySearchable($value)
	{
		$this->MotorsGermanySearchable = $value;
	}
/**
 *

 * @return string
 */
	function getCategoryID()
	{
		return $this->CategoryID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategoryID($value)
	{
		$this->CategoryID = $value;
	}
/**
 *

 * @return boolean
 */
	function getAdFormat()
	{
		return $this->AdFormat;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAdFormat($value)
	{
		$this->AdFormat = $value;
	}
/**
 *

 * @return boolean
 */
	function getFreeShipping()
	{
		return $this->FreeShipping;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setFreeShipping($value)
	{
		$this->FreeShipping = $value;
	}
/**
 *

 * @return CurrencyCodeType
 */
	function getCurrency()
	{
		return $this->Currency;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCurrency($value)
	{
		$this->Currency = $value;
	}
/**
 *

 * @return ItemTypeFilterCodeType
 */
	function getItemTypeFilter()
	{
		return $this->ItemTypeFilter;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemTypeFilter($value)
	{
		$this->ItemTypeFilter = $value;
	}
/**
 *

 * @return CategoryListingsSearchCodeType
 */
	function getSearchType()
	{
		return $this->SearchType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSearchType($value)
	{
		$this->SearchType = $value;
	}
/**
 *

 * @return CategoryListingsOrderCodeType
 */
	function getOrderBy()
	{
		return $this->OrderBy;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setOrderBy($value)
	{
		$this->OrderBy = $value;
	}
/**
 *

 * @return PaginationType
 */
	function getPagination()
	{
		return $this->Pagination;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPagination($value)
	{
		$this->Pagination = $value;
	}
/**
 *

 * @return SearchLocationType
 */
	function getSearchLocation()
	{
		return $this->SearchLocation;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSearchLocation($value)
	{
		$this->SearchLocation = $value;
	}
/**
 *

 * @return ProximitySearchType
 */
	function getProximitySearch()
	{
		return $this->ProximitySearch;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setProximitySearch($value)
	{
		$this->ProximitySearch = $value;
	}
/**
 *

 * @return boolean
 */
	function getIncludeGetItFastItems()
	{
		return $this->IncludeGetItFastItems;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setIncludeGetItFastItems($value)
	{
		$this->IncludeGetItFastItems = $value;
	}
/**
 *

 * @return PaymentMethodSearchCodeType
 */
	function getPaymentMethod()
	{
		return $this->PaymentMethod;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPaymentMethod($value)
	{
		$this->PaymentMethod = $value;
	}
/**
 *

 * @return boolean
 */
	function getIncludeCondition()
	{
		return $this->IncludeCondition;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setIncludeCondition($value)
	{
		$this->IncludeCondition = $value;
	}
/**
 *

 * @return boolean
 */
	function getIncludeFeedback()
	{
		return $this->IncludeFeedback;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setIncludeFeedback($value)
	{
		$this->IncludeFeedback = $value;
	}
/**
 *

 * @return string
 */
	function getLocalSearchPostalCode()
	{
		return $this->LocalSearchPostalCode;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setLocalSearchPostalCode($value)
	{
		$this->LocalSearchPostalCode = $value;
	}
/**
 *

 * @return int
 */
	function getMaxRelatedSearchKeywords()
	{
		return $this->MaxRelatedSearchKeywords;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMaxRelatedSearchKeywords($value)
	{
		$this->MaxRelatedSearchKeywords = $value;
	}
/**
 *

 * @return GroupType
 */
	function getGroup()
	{
		return $this->Group;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setGroup($value)
	{
		$this->Group = $value;
	}
/**
 *

 * @return boolean
 */
	function getHideDuplicateItems()
	{
		return $this->HideDuplicateItems;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setHideDuplicateItems($value)
	{
		$this->HideDuplicateItems = $value;
	}
/**
 *

 * @return 
 */
	function GetCategoryListingsRequestType()
	{
		$this->AbstractRequestType('GetCategoryListingsRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'MotorsGermanySearchable' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CategoryID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AdFormat' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FreeShipping' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Currency' =>
				array(
					'required' => false,
					'type' => 'CurrencyCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemTypeFilter' =>
				array(
					'required' => false,
					'type' => 'ItemTypeFilterCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SearchType' =>
				array(
					'required' => false,
					'type' => 'CategoryListingsSearchCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'OrderBy' =>
				array(
					'required' => false,
					'type' => 'CategoryListingsOrderCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Pagination' =>
				array(
					'required' => false,
					'type' => 'PaginationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SearchLocation' =>
				array(
					'required' => false,
					'type' => 'SearchLocationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ProximitySearch' =>
				array(
					'required' => false,
					'type' => 'ProximitySearchType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'IncludeGetItFastItems' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PaymentMethod' =>
				array(
					'required' => false,
					'type' => 'PaymentMethodSearchCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'IncludeCondition' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'IncludeFeedback' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LocalSearchPostalCode' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MaxRelatedSearchKeywords' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Group' =>
				array(
					'required' => false,
					'type' => 'GroupType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'HideDuplicateItems' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
