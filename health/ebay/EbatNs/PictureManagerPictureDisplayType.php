<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'PictureManagerPictureDisplayTypeCodeType.php';

class PictureManagerPictureDisplayType extends EbatNs_ComplexType
{
	// start props
	// @var PictureManagerPictureDisplayTypeCodeType $DisplayType
	var $DisplayType;
	// @var anyURI $URL
	var $URL;
	// @var int $Size
	var $Size;
	// @var int $Height
	var $Height;
	// @var int $Width
	var $Width;
	// end props

/**
 *

 * @return PictureManagerPictureDisplayTypeCodeType
 */
	function getDisplayType()
	{
		return $this->DisplayType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisplayType($value)
	{
		$this->DisplayType = $value;
	}
/**
 *

 * @return anyURI
 */
	function getURL()
	{
		return $this->URL;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setURL($value)
	{
		$this->URL = $value;
	}
/**
 *

 * @return int
 */
	function getSize()
	{
		return $this->Size;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSize($value)
	{
		$this->Size = $value;
	}
/**
 *

 * @return int
 */
	function getHeight()
	{
		return $this->Height;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setHeight($value)
	{
		$this->Height = $value;
	}
/**
 *

 * @return int
 */
	function getWidth()
	{
		return $this->Width;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setWidth($value)
	{
		$this->Width = $value;
	}
/**
 *

 * @return 
 */
	function PictureManagerPictureDisplayType()
	{
		$this->EbatNs_ComplexType('PictureManagerPictureDisplayType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'DisplayType' =>
				array(
					'required' => false,
					'type' => 'PictureManagerPictureDisplayTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'URL' =>
				array(
					'required' => false,
					'type' => 'anyURI',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Size' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Height' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Width' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
