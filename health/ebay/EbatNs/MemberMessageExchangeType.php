<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'MessageStatusTypeCodeType.php';
require_once 'MemberMessageType.php';
require_once 'ItemType.php';

class MemberMessageExchangeType extends EbatNs_ComplexType
{
	// start props
	// @var ItemType $Item
	var $Item;
	// @var MemberMessageType $Question
	var $Question;
	// @var string $Response
	var $Response;
	// @var MessageStatusTypeCodeType $MessageStatus
	var $MessageStatus;
	// @var dateTime $CreationDate
	var $CreationDate;
	// @var dateTime $LastModifiedDate
	var $LastModifiedDate;
	// end props

/**
 *

 * @return ItemType
 */
	function getItem()
	{
		return $this->Item;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItem($value)
	{
		$this->Item = $value;
	}
/**
 *

 * @return MemberMessageType
 */
	function getQuestion()
	{
		return $this->Question;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuestion($value)
	{
		$this->Question = $value;
	}
/**
 *

 * @return string
 * @param  $index 
 */
	function getResponse($index = null)
	{
		if ($index) {
		return $this->Response[$index];
	} else {
		return $this->Response;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setResponse($value, $index = null)
	{
		if ($index) {
	$this->Response[$index] = $value;
	} else {
	$this->Response = $value;
	}

	}
/**
 *

 * @return MessageStatusTypeCodeType
 */
	function getMessageStatus()
	{
		return $this->MessageStatus;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMessageStatus($value)
	{
		$this->MessageStatus = $value;
	}
/**
 *

 * @return dateTime
 */
	function getCreationDate()
	{
		return $this->CreationDate;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCreationDate($value)
	{
		$this->CreationDate = $value;
	}
/**
 *

 * @return dateTime
 */
	function getLastModifiedDate()
	{
		return $this->LastModifiedDate;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setLastModifiedDate($value)
	{
		$this->LastModifiedDate = $value;
	}
/**
 *

 * @return 
 */
	function MemberMessageExchangeType()
	{
		$this->EbatNs_ComplexType('MemberMessageExchangeType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'Item' =>
				array(
					'required' => false,
					'type' => 'ItemType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Question' =>
				array(
					'required' => false,
					'type' => 'MemberMessageType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Response' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => true,
					'cardinality' => '0..*'
				),
				'MessageStatus' =>
				array(
					'required' => false,
					'type' => 'MessageStatusTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CreationDate' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LastModifiedDate' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
