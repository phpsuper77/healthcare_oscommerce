<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'UserIDType.php';
require_once 'AbstractResponseType.php';
require_once 'ItemIDArrayType.php';

class ItemsCanceledEventType extends AbstractResponseType
{
	// start props
	// @var ItemIDArrayType $CanceledItemIDArray
	var $CanceledItemIDArray;
	// @var boolean $EligibleForRelist
	var $EligibleForRelist;
	// @var UserIDType $SellerID
	var $SellerID;
	// end props

/**
 *

 * @return ItemIDArrayType
 */
	function getCanceledItemIDArray()
	{
		return $this->CanceledItemIDArray;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCanceledItemIDArray($value)
	{
		$this->CanceledItemIDArray = $value;
	}
/**
 *

 * @return boolean
 */
	function getEligibleForRelist()
	{
		return $this->EligibleForRelist;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setEligibleForRelist($value)
	{
		$this->EligibleForRelist = $value;
	}
/**
 *

 * @return UserIDType
 */
	function getSellerID()
	{
		return $this->SellerID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellerID($value)
	{
		$this->SellerID = $value;
	}
/**
 *

 * @return 
 */
	function ItemsCanceledEventType()
	{
		$this->AbstractResponseType('ItemsCanceledEventType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'CanceledItemIDArray' =>
				array(
					'required' => false,
					'type' => 'ItemIDArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'EligibleForRelist' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellerID' =>
				array(
					'required' => false,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
