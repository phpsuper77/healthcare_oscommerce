<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'ListingTypeCodeType.php';
require_once 'VariationType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'ShipmentType.php';
require_once 'TransactionPlatformCodeType.php';
require_once 'AmountType.php';
require_once 'ItemIDType.php';

class SellingManagerSoldTransactionType extends EbatNs_ComplexType
{
	// start props
	// @var string $InvoiceNumber
	var $InvoiceNumber;
	// @var long $TransactionID
	var $TransactionID;
	// @var long $SaleRecordID
	var $SaleRecordID;
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var int $QuantitySold
	var $QuantitySold;
	// @var AmountType $ItemPrice
	var $ItemPrice;
	// @var AmountType $SubtotalAmount
	var $SubtotalAmount;
	// @var string $ItemTitle
	var $ItemTitle;
	// @var ListingTypeCodeType $ListingType
	var $ListingType;
	// @var boolean $Relisted
	var $Relisted;
	// @var int $WatchCount
	var $WatchCount;
	// @var AmountType $StartPrice
	var $StartPrice;
	// @var AmountType $ReservePrice
	var $ReservePrice;
	// @var boolean $SecondChanceOfferSent
	var $SecondChanceOfferSent;
	// @var string $CustomLabel
	var $CustomLabel;
	// @var TransactionPlatformCodeType $SoldOn
	var $SoldOn;
	// @var TransactionPlatformCodeType $ListedOn
	var $ListedOn;
	// @var ShipmentType $Shipment
	var $Shipment;
	// @var boolean $CharityListing
	var $CharityListing;
	// @var VariationType $Variation
	var $Variation;
	// end props

/**
 *

 * @return string
 */
	function getInvoiceNumber()
	{
		return $this->InvoiceNumber;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setInvoiceNumber($value)
	{
		$this->InvoiceNumber = $value;
	}
/**
 *

 * @return long
 */
	function getTransactionID()
	{
		return $this->TransactionID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTransactionID($value)
	{
		$this->TransactionID = $value;
	}
/**
 *

 * @return long
 */
	function getSaleRecordID()
	{
		return $this->SaleRecordID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSaleRecordID($value)
	{
		$this->SaleRecordID = $value;
	}
/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return int
 */
	function getQuantitySold()
	{
		return $this->QuantitySold;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuantitySold($value)
	{
		$this->QuantitySold = $value;
	}
/**
 *

 * @return AmountType
 */
	function getItemPrice()
	{
		return $this->ItemPrice;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemPrice($value)
	{
		$this->ItemPrice = $value;
	}
/**
 *

 * @return AmountType
 */
	function getSubtotalAmount()
	{
		return $this->SubtotalAmount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSubtotalAmount($value)
	{
		$this->SubtotalAmount = $value;
	}
/**
 *

 * @return string
 */
	function getItemTitle()
	{
		return $this->ItemTitle;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemTitle($value)
	{
		$this->ItemTitle = $value;
	}
/**
 *

 * @return ListingTypeCodeType
 */
	function getListingType()
	{
		return $this->ListingType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setListingType($value)
	{
		$this->ListingType = $value;
	}
/**
 *

 * @return boolean
 */
	function getRelisted()
	{
		return $this->Relisted;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRelisted($value)
	{
		$this->Relisted = $value;
	}
/**
 *

 * @return int
 */
	function getWatchCount()
	{
		return $this->WatchCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setWatchCount($value)
	{
		$this->WatchCount = $value;
	}
/**
 *

 * @return AmountType
 */
	function getStartPrice()
	{
		return $this->StartPrice;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setStartPrice($value)
	{
		$this->StartPrice = $value;
	}
/**
 *

 * @return AmountType
 */
	function getReservePrice()
	{
		return $this->ReservePrice;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setReservePrice($value)
	{
		$this->ReservePrice = $value;
	}
/**
 *

 * @return boolean
 */
	function getSecondChanceOfferSent()
	{
		return $this->SecondChanceOfferSent;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSecondChanceOfferSent($value)
	{
		$this->SecondChanceOfferSent = $value;
	}
/**
 *

 * @return string
 */
	function getCustomLabel()
	{
		return $this->CustomLabel;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCustomLabel($value)
	{
		$this->CustomLabel = $value;
	}
/**
 *

 * @return TransactionPlatformCodeType
 */
	function getSoldOn()
	{
		return $this->SoldOn;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSoldOn($value)
	{
		$this->SoldOn = $value;
	}
/**
 *

 * @return TransactionPlatformCodeType
 * @param  $index 
 */
	function getListedOn($index = null)
	{
		if ($index) {
		return $this->ListedOn[$index];
	} else {
		return $this->ListedOn;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setListedOn($value, $index = null)
	{
		if ($index) {
	$this->ListedOn[$index] = $value;
	} else {
	$this->ListedOn = $value;
	}

	}
/**
 *

 * @return ShipmentType
 */
	function getShipment()
	{
		return $this->Shipment;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShipment($value)
	{
		$this->Shipment = $value;
	}
/**
 *

 * @return boolean
 */
	function getCharityListing()
	{
		return $this->CharityListing;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCharityListing($value)
	{
		$this->CharityListing = $value;
	}
/**
 *

 * @return VariationType
 */
	function getVariation()
	{
		return $this->Variation;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setVariation($value)
	{
		$this->Variation = $value;
	}
/**
 *

 * @return 
 */
	function SellingManagerSoldTransactionType()
	{
		$this->EbatNs_ComplexType('SellingManagerSoldTransactionType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'InvoiceNumber' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TransactionID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SaleRecordID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'QuantitySold' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemPrice' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SubtotalAmount' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemTitle' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ListingType' =>
				array(
					'required' => false,
					'type' => 'ListingTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Relisted' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'WatchCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'StartPrice' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ReservePrice' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SecondChanceOfferSent' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CustomLabel' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SoldOn' =>
				array(
					'required' => false,
					'type' => 'TransactionPlatformCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ListedOn' =>
				array(
					'required' => false,
					'type' => 'TransactionPlatformCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'Shipment' =>
				array(
					'required' => false,
					'type' => 'ShipmentType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CharityListing' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Variation' =>
				array(
					'required' => false,
					'type' => 'VariationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
