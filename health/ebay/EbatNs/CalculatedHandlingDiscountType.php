<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'HandlingNameCodeType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'AmountType.php';

class CalculatedHandlingDiscountType extends EbatNs_ComplexType
{
	// start props
	// @var HandlingNameCodeType $DiscountName
	var $DiscountName;
	// @var AmountType $OrderHandlingAmount
	var $OrderHandlingAmount;
	// @var AmountType $EachAdditionalAmount
	var $EachAdditionalAmount;
	// @var AmountType $EachAdditionalOffAmount
	var $EachAdditionalOffAmount;
	// @var float $EachAdditionalPercentOff
	var $EachAdditionalPercentOff;
	// end props

/**
 *

 * @return HandlingNameCodeType
 */
	function getDiscountName()
	{
		return $this->DiscountName;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDiscountName($value)
	{
		$this->DiscountName = $value;
	}
/**
 *

 * @return AmountType
 */
	function getOrderHandlingAmount()
	{
		return $this->OrderHandlingAmount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setOrderHandlingAmount($value)
	{
		$this->OrderHandlingAmount = $value;
	}
/**
 *

 * @return AmountType
 */
	function getEachAdditionalAmount()
	{
		return $this->EachAdditionalAmount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setEachAdditionalAmount($value)
	{
		$this->EachAdditionalAmount = $value;
	}
/**
 *

 * @return AmountType
 */
	function getEachAdditionalOffAmount()
	{
		return $this->EachAdditionalOffAmount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setEachAdditionalOffAmount($value)
	{
		$this->EachAdditionalOffAmount = $value;
	}
/**
 *

 * @return float
 */
	function getEachAdditionalPercentOff()
	{
		return $this->EachAdditionalPercentOff;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setEachAdditionalPercentOff($value)
	{
		$this->EachAdditionalPercentOff = $value;
	}
/**
 *

 * @return 
 */
	function CalculatedHandlingDiscountType()
	{
		$this->EbatNs_ComplexType('CalculatedHandlingDiscountType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'DiscountName' =>
				array(
					'required' => false,
					'type' => 'HandlingNameCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'OrderHandlingAmount' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'EachAdditionalAmount' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'EachAdditionalOffAmount' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'EachAdditionalPercentOff' =>
				array(
					'required' => false,
					'type' => 'float',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
