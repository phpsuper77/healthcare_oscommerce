<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'CategoryMappingType.php';
require_once 'AbstractResponseType.php';

class GetCategoryMappingsResponseType extends AbstractResponseType
{
	// start props
	// @var CategoryMappingType $CategoryMapping
	var $CategoryMapping;
	// @var string $CategoryVersion
	var $CategoryVersion;
	// end props

/**
 *

 * @return CategoryMappingType
 * @param  $index 
 */
	function getCategoryMapping($index = null)
	{
		if ($index) {
		return $this->CategoryMapping[$index];
	} else {
		return $this->CategoryMapping;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setCategoryMapping($value, $index = null)
	{
		if ($index) {
	$this->CategoryMapping[$index] = $value;
	} else {
	$this->CategoryMapping = $value;
	}

	}
/**
 *

 * @return string
 */
	function getCategoryVersion()
	{
		return $this->CategoryVersion;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategoryVersion($value)
	{
		$this->CategoryVersion = $value;
	}
/**
 *

 * @return 
 */
	function GetCategoryMappingsResponseType()
	{
		$this->AbstractResponseType('GetCategoryMappingsResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'CategoryMapping' =>
				array(
					'required' => false,
					'type' => 'CategoryMappingType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'CategoryVersion' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
