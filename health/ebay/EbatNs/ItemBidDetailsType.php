<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'UserIDType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'ItemIDType.php';

class ItemBidDetailsType extends EbatNs_ComplexType
{
	// start props
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var string $CategoryID
	var $CategoryID;
	// @var int $BidCount
	var $BidCount;
	// @var UserIDType $SellerID
	var $SellerID;
	// @var dateTime $LastBidTime
	var $LastBidTime;
	// end props

/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return string
 */
	function getCategoryID()
	{
		return $this->CategoryID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategoryID($value)
	{
		$this->CategoryID = $value;
	}
/**
 *

 * @return int
 */
	function getBidCount()
	{
		return $this->BidCount;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidCount($value)
	{
		$this->BidCount = $value;
	}
/**
 *

 * @return UserIDType
 */
	function getSellerID()
	{
		return $this->SellerID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellerID($value)
	{
		$this->SellerID = $value;
	}
/**
 *

 * @return dateTime
 */
	function getLastBidTime()
	{
		return $this->LastBidTime;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setLastBidTime($value)
	{
		$this->LastBidTime = $value;
	}
/**
 *

 * @return 
 */
	function ItemBidDetailsType()
	{
		$this->EbatNs_ComplexType('ItemBidDetailsType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CategoryID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidCount' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellerID' =>
				array(
					'required' => false,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LastBidTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
