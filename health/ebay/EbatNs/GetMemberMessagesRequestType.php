<?php
// autogenerated file 29.05.2009 15:17
// $Id: $
// $Log: $
//
//
require_once 'UserIDType.php';
require_once 'PaginationType.php';
require_once 'MessageTypeCodeType.php';
require_once 'MessageStatusTypeCodeType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

class GetMemberMessagesRequestType extends AbstractRequestType
{
	// start props
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var MessageTypeCodeType $MailMessageType
	var $MailMessageType;
	// @var MessageStatusTypeCodeType $MessageStatus
	var $MessageStatus;
	// @var boolean $DisplayToPublic
	var $DisplayToPublic;
	// @var dateTime $StartCreationTime
	var $StartCreationTime;
	// @var dateTime $EndCreationTime
	var $EndCreationTime;
	// @var PaginationType $Pagination
	var $Pagination;
	// @var string $MemberMessageID
	var $MemberMessageID;
	// @var UserIDType $SenderID
	var $SenderID;
	// end props

/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return MessageTypeCodeType
 */
	function getMailMessageType()
	{
		return $this->MailMessageType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMailMessageType($value)
	{
		$this->MailMessageType = $value;
	}
/**
 *

 * @return MessageStatusTypeCodeType
 */
	function getMessageStatus()
	{
		return $this->MessageStatus;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMessageStatus($value)
	{
		$this->MessageStatus = $value;
	}
/**
 *

 * @return boolean
 */
	function getDisplayToPublic()
	{
		return $this->DisplayToPublic;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDisplayToPublic($value)
	{
		$this->DisplayToPublic = $value;
	}
/**
 *

 * @return dateTime
 */
	function getStartCreationTime()
	{
		return $this->StartCreationTime;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setStartCreationTime($value)
	{
		$this->StartCreationTime = $value;
	}
/**
 *

 * @return dateTime
 */
	function getEndCreationTime()
	{
		return $this->EndCreationTime;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setEndCreationTime($value)
	{
		$this->EndCreationTime = $value;
	}
/**
 *

 * @return PaginationType
 */
	function getPagination()
	{
		return $this->Pagination;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPagination($value)
	{
		$this->Pagination = $value;
	}
/**
 *

 * @return string
 */
	function getMemberMessageID()
	{
		return $this->MemberMessageID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMemberMessageID($value)
	{
		$this->MemberMessageID = $value;
	}
/**
 *

 * @return UserIDType
 */
	function getSenderID()
	{
		return $this->SenderID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSenderID($value)
	{
		$this->SenderID = $value;
	}
/**
 *

 * @return 
 */
	function GetMemberMessagesRequestType()
	{
		$this->AbstractRequestType('GetMemberMessagesRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MailMessageType' =>
				array(
					'required' => false,
					'type' => 'MessageTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MessageStatus' =>
				array(
					'required' => false,
					'type' => 'MessageStatusTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DisplayToPublic' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'StartCreationTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'EndCreationTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Pagination' =>
				array(
					'required' => false,
					'type' => 'PaginationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MemberMessageID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SenderID' =>
				array(
					'required' => false,
					'type' => 'UserIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
